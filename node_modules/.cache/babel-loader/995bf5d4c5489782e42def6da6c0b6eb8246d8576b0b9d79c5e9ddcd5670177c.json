{"ast":null,"code":"export let WellnessBreakResponse=/*#__PURE__*/function(WellnessBreakResponse){WellnessBreakResponse[\"NONE\"]=\"none\";WellnessBreakResponse[\"ACCEPT\"]=\"accept\";WellnessBreakResponse[\"REJECT\"]=\"reject\";WellnessBreakResponse[\"DISMISS\"]=\"dismiss\";WellnessBreakResponse[\"NOTIFICATION_TIMEOUT\"]=\"timeout\";WellnessBreakResponse[\"NO_RESPONSE\"]=\"no_response\";return WellnessBreakResponse;}({});export let WellnessCardType=/*#__PURE__*/function(WellnessCardType){WellnessCardType[\"NONE\"]=\"none\";WellnessCardType[\"QUESTION\"]=\"wellnessBreakQuestion\";WellnessCardType[\"CTA_REQUEST\"]=\"wellnessBreakCTARequest\";WellnessCardType[\"END_OF_BREAK\"]=\"endOfBreakMessage\";return WellnessCardType;}({});export let WellnessResponseSource=/*#__PURE__*/function(WellnessResponseSource){WellnessResponseSource[WellnessResponseSource[\"CARD\"]=0]=\"CARD\";WellnessResponseSource[WellnessResponseSource[\"NOTIFICATION\"]=1]=\"NOTIFICATION\";WellnessResponseSource[WellnessResponseSource[\"CTA\"]=2]=\"CTA\";return WellnessResponseSource;}({});export let WellnessBreakError=/*#__PURE__*/function(WellnessBreakError){WellnessBreakError[WellnessBreakError[\"NONE\"]=0]=\"NONE\";WellnessBreakError[WellnessBreakError[\"CHANGE_STATE_TO_RESET_ERROR\"]=1]=\"CHANGE_STATE_TO_RESET_ERROR\";WellnessBreakError[WellnessBreakError[\"CHANGE_STATE_TO_AVAILABLE_ERROR\"]=2]=\"CHANGE_STATE_TO_AVAILABLE_ERROR\";WellnessBreakError[WellnessBreakError[\"GENERIC_ERROR\"]=3]=\"GENERIC_ERROR\";return WellnessBreakError;}({});export let WellnessBreakMetricType=/*#__PURE__*/function(WellnessBreakMetricType){WellnessBreakMetricType[\"NONE\"]=\"none\";WellnessBreakMetricType[\"BREAK_STARTED\"]=\"break_started\";WellnessBreakMetricType[\"BREAK_ENDED\"]=\"break_ended\";WellnessBreakMetricType[\"BREAK_WAITING_TO_START\"]=\"break_waiting_to_start\";WellnessBreakMetricType[\"CARD_BREAK_ACCEPTED\"]=\"card_accepted\";WellnessBreakMetricType[\"CARD_BREAK_REJECTED\"]=\"card_rejected\";WellnessBreakMetricType[\"CTA_APPROVED\"]=\"CTA_approved\";WellnessBreakMetricType[\"CTA_REJECTED\"]=\"CTA_rejected\";WellnessBreakMetricType[\"CTA_USER_REQUEST\"]=\"CTA_user_break_requested\";WellnessBreakMetricType[\"DISPLAY_CTA\"]=\"display_CTA\";WellnessBreakMetricType[\"ERROR_CHANGE_STATE\"]=\"error_changing_state\";WellnessBreakMetricType[\"GENERIC_ERROR\"]=\"generic_error\";WellnessBreakMetricType[\"NO_RESPONSE\"]=\"no_response\";WellnessBreakMetricType[\"NOTIFICATION_FIRED\"]=\"notification_fired\";WellnessBreakMetricType[\"NOTIFICATION_ACCEPTED\"]=\"notification_accepted\";WellnessBreakMetricType[\"NOTIFICATION_DISMISSED\"]=\"notification_dismissed\";WellnessBreakMetricType[\"NOTIFICATION_REJECTED\"]=\"notification_rejected\";WellnessBreakMetricType[\"NOTIFICATION_TIMEOUT\"]=\"notification_timeout\";WellnessBreakMetricType[\"PROVIDE_BREAK_EVENT_RECEIVED\"]=\"provide_break_event_received\";return WellnessBreakMetricType;}({});","map":{"version":3,"names":["WellnessBreakResponse","WellnessCardType","WellnessResponseSource","WellnessBreakError","WellnessBreakMetricType"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/Utils/WellnessBreakTypes.ts"],"sourcesContent":["export const enum WellnessBreakResponse {\n    NONE = \"none\",\n    ACCEPT = \"accept\",\n    REJECT = \"reject\",\n    DISMISS = \"dismiss\",\n    NOTIFICATION_TIMEOUT = \"timeout\",\n    NO_RESPONSE = \"no_response\"\n}\n\nexport const enum WellnessCardType {\n    NONE = \"none\",\n    QUESTION = \"wellnessBreakQuestion\",\n    CTA_REQUEST = \"wellnessBreakCTARequest\",\n    END_OF_BREAK = \"endOfBreakMessage\"\n}\n\nexport const enum WellnessResponseSource {\n    CARD,\n    NOTIFICATION,\n    CTA\n}\n\nexport enum WellnessBreakError {\n    NONE,\n    CHANGE_STATE_TO_RESET_ERROR,\n    CHANGE_STATE_TO_AVAILABLE_ERROR,\n    GENERIC_ERROR\n}\n\nexport const enum WellnessBreakMetricType {\n    NONE = \"none\",\n    BREAK_STARTED = \"break_started\",\n    BREAK_ENDED = \"break_ended\",\n    BREAK_WAITING_TO_START = \"break_waiting_to_start\",\n    CARD_BREAK_ACCEPTED = \"card_accepted\",\n    CARD_BREAK_REJECTED = \"card_rejected\",\n    CTA_APPROVED = \"CTA_approved\",\n    CTA_REJECTED = \"CTA_rejected\",\n    CTA_USER_REQUEST = \"CTA_user_break_requested\",\n    DISPLAY_CTA = \"display_CTA\",\n    ERROR_CHANGE_STATE= \"error_changing_state\",\n    GENERIC_ERROR= \"generic_error\",\n    NO_RESPONSE = \"no_response\",\n    NOTIFICATION_FIRED = \"notification_fired\",\n    NOTIFICATION_ACCEPTED = \"notification_accepted\",\n    NOTIFICATION_DISMISSED = \"notification_dismissed\",\n    NOTIFICATION_REJECTED = \"notification_rejected\",\n    NOTIFICATION_TIMEOUT = \"notification_timeout\",\n    PROVIDE_BREAK_EVENT_RECEIVED = \"provide_break_event_received\"\n}\n"],"mappings":"AAAA,UAAkB,CAAAA,qBAAqB,uBAArBA,qBAAqB,EAArBA,qBAAqB,gBAArBA,qBAAqB,oBAArBA,qBAAqB,oBAArBA,qBAAqB,sBAArBA,qBAAqB,mCAArBA,qBAAqB,oCAArB,CAAAA,qBAAqB,OASvC,UAAkB,CAAAC,gBAAgB,uBAAhBA,gBAAgB,EAAhBA,gBAAgB,gBAAhBA,gBAAgB,qCAAhBA,gBAAgB,0CAAhBA,gBAAgB,2CAAhB,CAAAA,gBAAgB,OAOlC,UAAkB,CAAAC,sBAAsB,uBAAtBA,sBAAsB,EAAtBA,sBAAsB,CAAtBA,sBAAsB,mBAAtBA,sBAAsB,CAAtBA,sBAAsB,mCAAtBA,sBAAsB,CAAtBA,sBAAsB,uBAAtB,CAAAA,sBAAsB,OAMxC,UAAY,CAAAC,kBAAkB,uBAAlBA,kBAAkB,EAAlBA,kBAAkB,CAAlBA,kBAAkB,mBAAlBA,kBAAkB,CAAlBA,kBAAkB,iEAAlBA,kBAAkB,CAAlBA,kBAAkB,yEAAlBA,kBAAkB,CAAlBA,kBAAkB,2CAAlB,CAAAA,kBAAkB,OAO9B,UAAkB,CAAAC,uBAAuB,uBAAvBA,uBAAuB,EAAvBA,uBAAuB,gBAAvBA,uBAAuB,kCAAvBA,uBAAuB,8BAAvBA,uBAAuB,oDAAvBA,uBAAuB,wCAAvBA,uBAAuB,wCAAvBA,uBAAuB,gCAAvBA,uBAAuB,gCAAvBA,uBAAuB,gDAAvBA,uBAAuB,8BAAvBA,uBAAuB,8CAAvBA,uBAAuB,kCAAvBA,uBAAuB,8BAAvBA,uBAAuB,4CAAvBA,uBAAuB,kDAAvBA,uBAAuB,oDAAvBA,uBAAuB,kDAAvBA,uBAAuB,gDAAvBA,uBAAuB,sEAAvB,CAAAA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}