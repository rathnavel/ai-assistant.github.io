{"ast":null,"code":"export function FormatDateTime(timestamp) {\n  const dateTime = new Date(timestamp);\n  if (isNaN(dateTime.getTime())) {\n    return \"Invalid input date/time\";\n  }\n  return dateTime.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    hour12: true,\n    minute: \"2-digit\",\n    timeZone: \"UTC\"\n  });\n}\n_c = FormatDateTime;\nvar _c;\n$RefreshReg$(_c, \"FormatDateTime\");","map":{"version":3,"names":["FormatDateTime","timestamp","dateTime","Date","isNaN","getTime","toLocaleString","hour","hour12","minute","timeZone","_c","$RefreshReg$"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/Utils/TimeUtils.ts"],"sourcesContent":["export function FormatDateTime(timestamp: string): string {\n  const dateTime = new Date(timestamp);\n\n  if (isNaN(dateTime.getTime())) {\n    return \"Invalid input date/time\";\n  }\n\n  return dateTime.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    hour12: true,\n    minute: \"2-digit\",\n    timeZone: \"UTC\"\n  });\n}\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,SAAiB,EAAU;EACxD,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAEpC,IAAIG,KAAK,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;IAC7B,OAAO,yBAAyB;EAClC;EAEA,OAAOH,QAAQ,CAACI,cAAc,CAAC,OAAO,EAAE;IACtCC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ;AAACC,EAAA,GAbeX,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}