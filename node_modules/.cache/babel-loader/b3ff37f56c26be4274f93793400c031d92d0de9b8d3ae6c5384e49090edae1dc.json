{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const sessionVariables={orgId:\"\",aniId:\"\",interactionId:\"\",accessToken:\"\",requestSummary:false,isCDSEnabled:false,isVAHEnabled:false,agentId:\"\",agentSessionId:\"\",eventHandlerUrl:\"\",isWellnessBreakCTAAvailable:false};const initialState=sessionVariables;export const sessionVariablesSlice=createSlice({name:\"sessionVariables\",initialState,reducers:{setOrgId:(state,action)=>{state.orgId=action.payload;},setANIId:(state,action)=>{state.aniId=action.payload;},setInteractionId:(state,action)=>{state.interactionId=action.payload;},setAccessToken:(state,action)=>{state.accessToken=action.payload;},setIsCDSEnabled:(state,action)=>{state.isCDSEnabled=action.payload;},setIsVAHEnabled:(state,action)=>{state.isVAHEnabled=action.payload;},setAgentId:(state,action)=>{state.agentId=action.payload;},setAgentSessionId:(state,action)=>{state.agentSessionId=action.payload;},setEventHandlerUrl:(state,action)=>{state.eventHandlerUrl=action.payload;},setIsWellnessBreakCTAAvailable:(state,action)=>{state.isWellnessBreakCTAAvailable=action.payload;}}});export const{setOrgId,setANIId,setInteractionId,setAccessToken,setIsCDSEnabled,setIsVAHEnabled,setAgentId,setAgentSessionId,setEventHandlerUrl,setIsWellnessBreakCTAAvailable}=sessionVariablesSlice.actions;export default sessionVariablesSlice.reducer;","map":{"version":3,"names":["createSlice","sessionVariables","orgId","aniId","interactionId","accessToken","requestSummary","isCDSEnabled","isVAHEnabled","agentId","agentSessionId","eventHandlerUrl","isWellnessBreakCTAAvailable","initialState","sessionVariablesSlice","name","reducers","setOrgId","state","action","payload","setANIId","setInteractionId","setAccessToken","setIsCDSEnabled","setIsVAHEnabled","setAgentId","setAgentSessionId","setEventHandlerUrl","setIsWellnessBreakCTAAvailable","actions","reducer"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/Utils/SessionVariables.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SessionVariablesState {\n  orgId: string;\n  aniId: string;\n  interactionId: string;\n  accessToken: string;\n  requestSummary: boolean;\n  isCDSEnabled: boolean;\n  isVAHEnabled: boolean;\n  agentId: string;\n  agentSessionId: string;\n  eventHandlerUrl: string;\n  isWellnessBreakCTAAvailable: boolean;\n}\n\nconst sessionVariables: SessionVariablesState = {\n  orgId: \"\",\n  aniId: \"\",\n  interactionId: \"\",\n  accessToken: \"\",\n  requestSummary: false,\n  isCDSEnabled: false,\n  isVAHEnabled: false,\n  agentId: \"\",\n  agentSessionId: \"\",\n  eventHandlerUrl: \"\",\n  isWellnessBreakCTAAvailable: false\n};\n\nconst initialState: SessionVariablesState = sessionVariables;\n\nexport const sessionVariablesSlice = createSlice({\n  name: \"sessionVariables\",\n  initialState,\n  reducers: {\n    setOrgId: (state, action: PayloadAction<string>): void => {\n      state.orgId = action.payload;\n    },\n    setANIId: (state, action: PayloadAction<string>): void => {\n      state.aniId = action.payload;\n    },\n    setInteractionId: (state, action: PayloadAction<string>): void => {\n      state.interactionId = action.payload;\n    },\n    setAccessToken: (state, action: PayloadAction<string>): void => {\n      state.accessToken = action.payload;\n    },\n    setIsCDSEnabled: (state, action: PayloadAction<boolean>): void => {\n      state.isCDSEnabled = action.payload;\n    },\n    setIsVAHEnabled: (state, action: PayloadAction<boolean>): void => {\n      state.isVAHEnabled = action.payload;\n    },\n    setAgentId: (state, action: PayloadAction<string>): void => {\n      state.agentId = action.payload;\n    },\n    setAgentSessionId: (state, action: PayloadAction<string>): void => {\n      state.agentSessionId = action.payload;\n    },\n    setEventHandlerUrl: (state, action: PayloadAction<string>): void => {\n      state.eventHandlerUrl = action.payload;\n    },\n    setIsWellnessBreakCTAAvailable: (state, action: PayloadAction<boolean>): void => {\n      state.isWellnessBreakCTAAvailable = action.payload;\n    }\n  }\n});\n\nexport const { setOrgId, setANIId, setInteractionId, setAccessToken, setIsCDSEnabled, setIsVAHEnabled, setAgentId, setAgentSessionId, setEventHandlerUrl, setIsWellnessBreakCTAAvailable } = sessionVariablesSlice.actions;\nexport default sessionVariablesSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAgB7D,KAAM,CAAAC,gBAAuC,CAAG,CAC9CC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,aAAa,CAAE,EAAE,CACjBC,WAAW,CAAE,EAAE,CACfC,cAAc,CAAE,KAAK,CACrBC,YAAY,CAAE,KAAK,CACnBC,YAAY,CAAE,KAAK,CACnBC,OAAO,CAAE,EAAE,CACXC,cAAc,CAAE,EAAE,CAClBC,eAAe,CAAE,EAAE,CACnBC,2BAA2B,CAAE,KAC/B,CAAC,CAED,KAAM,CAAAC,YAAmC,CAAGZ,gBAAgB,CAE5D,MAAO,MAAM,CAAAa,qBAAqB,CAAGd,WAAW,CAAC,CAC/Ce,IAAI,CAAE,kBAAkB,CACxBF,YAAY,CACZG,QAAQ,CAAE,CACRC,QAAQ,CAAEA,CAACC,KAAK,CAAEC,MAA6B,GAAW,CACxDD,KAAK,CAAChB,KAAK,CAAGiB,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDC,QAAQ,CAAEA,CAACH,KAAK,CAAEC,MAA6B,GAAW,CACxDD,KAAK,CAACf,KAAK,CAAGgB,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDE,gBAAgB,CAAEA,CAACJ,KAAK,CAAEC,MAA6B,GAAW,CAChED,KAAK,CAACd,aAAa,CAAGe,MAAM,CAACC,OAAO,CACtC,CAAC,CACDG,cAAc,CAAEA,CAACL,KAAK,CAAEC,MAA6B,GAAW,CAC9DD,KAAK,CAACb,WAAW,CAAGc,MAAM,CAACC,OAAO,CACpC,CAAC,CACDI,eAAe,CAAEA,CAACN,KAAK,CAAEC,MAA8B,GAAW,CAChED,KAAK,CAACX,YAAY,CAAGY,MAAM,CAACC,OAAO,CACrC,CAAC,CACDK,eAAe,CAAEA,CAACP,KAAK,CAAEC,MAA8B,GAAW,CAChED,KAAK,CAACV,YAAY,CAAGW,MAAM,CAACC,OAAO,CACrC,CAAC,CACDM,UAAU,CAAEA,CAACR,KAAK,CAAEC,MAA6B,GAAW,CAC1DD,KAAK,CAACT,OAAO,CAAGU,MAAM,CAACC,OAAO,CAChC,CAAC,CACDO,iBAAiB,CAAEA,CAACT,KAAK,CAAEC,MAA6B,GAAW,CACjED,KAAK,CAACR,cAAc,CAAGS,MAAM,CAACC,OAAO,CACvC,CAAC,CACDQ,kBAAkB,CAAEA,CAACV,KAAK,CAAEC,MAA6B,GAAW,CAClED,KAAK,CAACP,eAAe,CAAGQ,MAAM,CAACC,OAAO,CACxC,CAAC,CACDS,8BAA8B,CAAEA,CAACX,KAAK,CAAEC,MAA8B,GAAW,CAC/ED,KAAK,CAACN,2BAA2B,CAAGO,MAAM,CAACC,OAAO,CACpD,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEH,QAAQ,CAAEI,QAAQ,CAAEC,gBAAgB,CAAEC,cAAc,CAAEC,eAAe,CAAEC,eAAe,CAAEC,UAAU,CAAEC,iBAAiB,CAAEC,kBAAkB,CAAEC,8BAA+B,CAAC,CAAGf,qBAAqB,CAACgB,OAAO,CAC1N,cAAe,CAAAhB,qBAAqB,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}