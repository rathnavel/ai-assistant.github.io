{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import axios from\"axios\";export const fetchCDSData=createAsyncThunk(\"cdsapi/fetchData\",async(_ref,_ref2)=>{let{apiBaseEndpoint,orgId,aniId,accessToken}=_ref;let{rejectWithValue}=_ref2;try{const response=await axios.get(`${apiBaseEndpoint}cds-api/summary?orgId=${orgId}&aniId=${aniId}`,{headers:{Authorization:`Bearer ${accessToken}`}});console.log(\"Response from CDS API\",response.data);let timeStamp=response.data.interactionDateTime;let summaryResponse=JSON.parse(response.data.summary);let res={summary:summaryResponse,interactionDateTime:timeStamp};return res;}catch(error){console.error(\"Failed to fetch data\",error);return rejectWithValue({message:error instanceof Error?error.message:\"Unknown error\"});}});//#region  Slice\nconst initialState={cdsData:null,loading:false,error:null};export const CDSAPISlice=createSlice({name:\"cdsapi\",initialState,reducers:{// Define reducers if needed\nremoveCDSData:state=>{state.cdsData=null;state.loading=false;state.error=null;},addCDSData:(state,action)=>{console.log(\"Adding CDS Data\",action.payload);state.cdsData=action.payload;state.loading=false;state.error=null;}},extraReducers:builder=>{builder.addCase(fetchCDSData.pending,state=>{state.loading=true;state.error=null;});builder.addCase(fetchCDSData.fulfilled,(state,action)=>{state.cdsData=action.payload;state.loading=false;});builder.addCase(fetchCDSData.rejected,(state,action)=>{var _action$payload$messa,_action$payload;state.error=(_action$payload$messa=(_action$payload=action.payload)===null||_action$payload===void 0?void 0:_action$payload.message)!==null&&_action$payload$messa!==void 0?_action$payload$messa:\"Failed to fetch data\";state.loading=false;});}});export const{addCDSData,removeCDSData}=CDSAPISlice.actions;export default CDSAPISlice.reducer;//#endregion","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchCDSData","_ref","_ref2","apiBaseEndpoint","orgId","aniId","accessToken","rejectWithValue","response","get","headers","Authorization","console","log","data","timeStamp","interactionDateTime","summaryResponse","JSON","parse","summary","res","error","message","Error","initialState","cdsData","loading","CDSAPISlice","name","reducers","removeCDSData","state","addCDSData","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload$messa","_action$payload","actions","reducer"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/APIIntegrations/CDSData.ts"],"sourcesContent":["import { PayloadAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { CDSResponse, ApiError } from \"./types\";\nimport axios from \"axios\";\n\nexport const fetchCDSData = createAsyncThunk<\n  CDSResponse,\n  {\n    apiBaseEndpoint: string;\n    orgId: string;\n    aniId: string;\n    accessToken: string;\n  },\n  { rejectValue: ApiError }\n>(\n  \"cdsapi/fetchData\",\n  async (\n    { apiBaseEndpoint, orgId, aniId, accessToken },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await axios.get(\n        `${apiBaseEndpoint}cds-api/summary?orgId=${orgId}&aniId=${aniId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }\n      );\n      console.log(\"Response from CDS API\", response.data);\n\n      let timeStamp = response.data.interactionDateTime;\n      let summaryResponse = JSON.parse(response.data.summary);\n      let res: CDSResponse = {\n        summary: summaryResponse,\n        interactionDateTime: timeStamp,\n      };\n      return res;\n    } catch (error) {\n      console.error(\"Failed to fetch data\", error);\n      return rejectWithValue({\n        message: error instanceof Error ? error.message : \"Unknown error\",\n      });\n    }\n  }\n);\n\n//#region  Slice\n\ninterface YourApiState {\n  cdsData: CDSResponse | null;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: YourApiState = {\n  cdsData: null,\n  loading: false,\n  error: null,\n};\n\nexport const CDSAPISlice = createSlice({\n  name: \"cdsapi\",\n  initialState,\n  reducers: {\n    // Define reducers if needed\n    removeCDSData: (state) => {\n      state.cdsData = null;\n      state.loading = false;\n      state.error = null;\n    },\n    addCDSData: (state, action: PayloadAction<CDSResponse>) => {\n      console.log(\"Adding CDS Data\", action.payload);\n      state.cdsData = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCDSData.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(fetchCDSData.fulfilled, (state, action) => {\n      state.cdsData = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(fetchCDSData.rejected, (state, action) => {\n      state.error = action.payload?.message ?? \"Failed to fetch data\";\n      state.loading = false;\n    });\n  },\n});\n\nexport const { addCDSData, removeCDSData } = CDSAPISlice.actions;\nexport default CDSAPISlice.reducer;\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}