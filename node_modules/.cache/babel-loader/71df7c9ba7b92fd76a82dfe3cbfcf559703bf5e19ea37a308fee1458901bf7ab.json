{"ast":null,"code":"export function FormatDateTime(timestamp){const dateTime=new Date(timestamp);if(isNaN(dateTime.getTime())){return\"Invalid input date/time\";}return dateTime.toLocaleString(\"en-US\",{hour:\"2-digit\",hour12:true,minute:\"2-digit\",timeZone:\"UTC\"});}","map":{"version":3,"names":["FormatDateTime","timestamp","dateTime","Date","isNaN","getTime","toLocaleString","hour","hour12","minute","timeZone"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/Utils/TimeUtils.ts"],"sourcesContent":["export function FormatDateTime(timestamp: string): string {\n  const dateTime = new Date(timestamp);\n\n  if (isNaN(dateTime.getTime())) {\n    return \"Invalid input date/time\";\n  }\n\n  return dateTime.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    hour12: true,\n    minute: \"2-digit\",\n    timeZone: \"UTC\"\n  });\n}\n"],"mappings":"AAAA,MAAO,SAAS,CAAAA,cAAcA,CAACC,SAAiB,CAAU,CACxD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,IAAI,CAACF,SAAS,CAAC,CAEpC,GAAIG,KAAK,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE,CAC7B,MAAO,yBAAyB,CAClC,CAEA,MAAO,CAAAH,QAAQ,CAACI,cAAc,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,SAAS,CACjBC,QAAQ,CAAE,KACZ,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}