{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst sessionVariables = {\n  orgId: \"\",\n  aniId: \"\",\n  interactionId: \"\",\n  accessToken: \"\",\n  requestSummary: false,\n  isCDSEnabled: false,\n  isVAHEnabled: false,\n  agentId: \"\",\n  agentSessionId: \"\",\n  eventHandlerUrl: \"\",\n  isWellnessBreakCTAAvailable: false\n};\nconst initialState = sessionVariables;\nexport const sessionVariablesSlice = createSlice({\n  name: \"sessionVariables\",\n  initialState,\n  reducers: {\n    setOrgId: (state, action) => {\n      state.orgId = action.payload;\n    },\n    setANIId: (state, action) => {\n      state.aniId = action.payload;\n    },\n    setInteractionId: (state, action) => {\n      state.interactionId = action.payload;\n    },\n    setAccessToken: (state, action) => {\n      state.accessToken = action.payload;\n    },\n    setIsCDSEnabled: (state, action) => {\n      state.isCDSEnabled = action.payload;\n    },\n    setIsVAHEnabled: (state, action) => {\n      state.isVAHEnabled = action.payload;\n    },\n    setAgentId: (state, action) => {\n      state.agentId = action.payload;\n    },\n    setAgentSessionId: (state, action) => {\n      state.agentSessionId = action.payload;\n    },\n    setEventHandlerUrl: (state, action) => {\n      state.eventHandlerUrl = action.payload;\n    },\n    setIsWellnessBreakCTAAvailable: (state, action) => {\n      state.isWellnessBreakCTAAvailable = action.payload;\n    }\n  }\n});\nexport const {\n  setOrgId,\n  setANIId,\n  setInteractionId,\n  setAccessToken,\n  setIsCDSEnabled,\n  setIsVAHEnabled,\n  setAgentId,\n  setAgentSessionId,\n  setEventHandlerUrl,\n  setIsWellnessBreakCTAAvailable\n} = sessionVariablesSlice.actions;\nexport default sessionVariablesSlice.reducer;","map":{"version":3,"names":["createSlice","sessionVariables","orgId","aniId","interactionId","accessToken","requestSummary","isCDSEnabled","isVAHEnabled","agentId","agentSessionId","eventHandlerUrl","isWellnessBreakCTAAvailable","initialState","sessionVariablesSlice","name","reducers","setOrgId","state","action","payload","setANIId","setInteractionId","setAccessToken","setIsCDSEnabled","setIsVAHEnabled","setAgentId","setAgentSessionId","setEventHandlerUrl","setIsWellnessBreakCTAAvailable","actions","reducer"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/Utils/SessionVariables.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SessionVariablesState {\n  orgId: string;\n  aniId: string;\n  interactionId: string;\n  accessToken: string;\n  requestSummary: boolean;\n  isCDSEnabled: boolean;\n  isVAHEnabled: boolean;\n  agentId: string;\n  agentSessionId: string;\n  eventHandlerUrl: string;\n  isWellnessBreakCTAAvailable: boolean;\n}\n\nconst sessionVariables: SessionVariablesState = {\n  orgId: \"\",\n  aniId: \"\",\n  interactionId: \"\",\n  accessToken: \"\",\n  requestSummary: false,\n  isCDSEnabled: false,\n  isVAHEnabled: false,\n  agentId: \"\",\n  agentSessionId: \"\",\n  eventHandlerUrl: \"\",\n  isWellnessBreakCTAAvailable: false\n};\n\nconst initialState: SessionVariablesState = sessionVariables;\n\nexport const sessionVariablesSlice = createSlice({\n  name: \"sessionVariables\",\n  initialState,\n  reducers: {\n    setOrgId: (state, action: PayloadAction<string>): void => {\n      state.orgId = action.payload;\n    },\n    setANIId: (state, action: PayloadAction<string>): void => {\n      state.aniId = action.payload;\n    },\n    setInteractionId: (state, action: PayloadAction<string>): void => {\n      state.interactionId = action.payload;\n    },\n    setAccessToken: (state, action: PayloadAction<string>): void => {\n      state.accessToken = action.payload;\n    },\n    setIsCDSEnabled: (state, action: PayloadAction<boolean>): void => {\n      state.isCDSEnabled = action.payload;\n    },\n    setIsVAHEnabled: (state, action: PayloadAction<boolean>): void => {\n      state.isVAHEnabled = action.payload;\n    },\n    setAgentId: (state, action: PayloadAction<string>): void => {\n      state.agentId = action.payload;\n    },\n    setAgentSessionId: (state, action: PayloadAction<string>): void => {\n      state.agentSessionId = action.payload;\n    },\n    setEventHandlerUrl: (state, action: PayloadAction<string>): void => {\n      state.eventHandlerUrl = action.payload;\n    },\n    setIsWellnessBreakCTAAvailable: (state, action: PayloadAction<boolean>): void => {\n      state.isWellnessBreakCTAAvailable = action.payload;\n    }\n  }\n});\n\nexport const { setOrgId, setANIId, setInteractionId, setAccessToken, setIsCDSEnabled, setIsVAHEnabled, setAgentId, setAgentSessionId, setEventHandlerUrl, setIsWellnessBreakCTAAvailable } = sessionVariablesSlice.actions;\nexport default sessionVariablesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAgB7D,MAAMC,gBAAuC,GAAG;EAC9CC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAE,KAAK;EACrBC,YAAY,EAAE,KAAK;EACnBC,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE,EAAE;EACXC,cAAc,EAAE,EAAE;EAClBC,eAAe,EAAE,EAAE;EACnBC,2BAA2B,EAAE;AAC/B,CAAC;AAED,MAAMC,YAAmC,GAAGZ,gBAAgB;AAE5D,OAAO,MAAMa,qBAAqB,GAAGd,WAAW,CAAC;EAC/Ce,IAAI,EAAE,kBAAkB;EACxBF,YAAY;EACZG,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAW;MACxDD,KAAK,CAAChB,KAAK,GAAGiB,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAW;MACxDD,KAAK,CAACf,KAAK,GAAGgB,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,gBAAgB,EAAEA,CAACJ,KAAK,EAAEC,MAA6B,KAAW;MAChED,KAAK,CAACd,aAAa,GAAGe,MAAM,CAACC,OAAO;IACtC,CAAC;IACDG,cAAc,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAW;MAC9DD,KAAK,CAACb,WAAW,GAAGc,MAAM,CAACC,OAAO;IACpC,CAAC;IACDI,eAAe,EAAEA,CAACN,KAAK,EAAEC,MAA8B,KAAW;MAChED,KAAK,CAACX,YAAY,GAAGY,MAAM,CAACC,OAAO;IACrC,CAAC;IACDK,eAAe,EAAEA,CAACP,KAAK,EAAEC,MAA8B,KAAW;MAChED,KAAK,CAACV,YAAY,GAAGW,MAAM,CAACC,OAAO;IACrC,CAAC;IACDM,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAA6B,KAAW;MAC1DD,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC;IACDO,iBAAiB,EAAEA,CAACT,KAAK,EAAEC,MAA6B,KAAW;MACjED,KAAK,CAACR,cAAc,GAAGS,MAAM,CAACC,OAAO;IACvC,CAAC;IACDQ,kBAAkB,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAW;MAClED,KAAK,CAACP,eAAe,GAAGQ,MAAM,CAACC,OAAO;IACxC,CAAC;IACDS,8BAA8B,EAAEA,CAACX,KAAK,EAAEC,MAA8B,KAAW;MAC/ED,KAAK,CAACN,2BAA2B,GAAGO,MAAM,CAACC,OAAO;IACpD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI,QAAQ;EAAEC,gBAAgB;EAAEC,cAAc;EAAEC,eAAe;EAAEC,eAAe;EAAEC,UAAU;EAAEC,iBAAiB;EAAEC,kBAAkB;EAAEC;AAA+B,CAAC,GAAGf,qBAAqB,CAACgB,OAAO;AAC1N,eAAehB,qBAAqB,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}