{"ast":null,"code":"var _jsxFileName = \"/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/components/AssistantPanel/AssistantPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport AssistantPanelHeader from \"./AssistantPanelHeader\";\nimport { FormatDateTime } from \"../../Utils/TimeUtils\";\nimport SummaryCard from \"../SummaryCard/SummaryCard\";\nimport { WellnessBreakResponse } from \"../../Utils/WellnessBreakTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderCard(index, card) {\n  const formattedTimestamp = card.timestamp ? FormatDateTime(card.timestamp) : \"\";\n  console.info(\"Formatted Date: \", formattedTimestamp);\n  return /*#__PURE__*/_jsxDEV(SummaryCard, {\n    content: card.content,\n    contentRaw: card.contentRaw,\n    timestamp: formattedTimestamp,\n    widgetType: card.widgetType\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\nconst AssistantPanel = props => {\n  _s();\n  const summariesEndRef = useRef(null);\n  // const { grpcData } = useSelector((state: RootState) => state.VASummary);\n  const grpcData = useMemo(() => {\n    return {\n      summary: {\n        call_reason: \"Customer Inquiry\",\n        hand_off_reason: \"Escalation to Supervisor\",\n        details: \"*Issue with billing\\n*Requested refund\\n*Account update needed\"\n      },\n      interactionDateTime: \"23/Apr/2023:11:42:35\"\n    };\n  }, []);\n  const [summaryCards, setSummaryCards] = useState([]);\n  useEffect(() => {\n    // when the summaryCards change, scroll to the bottom\n    // adding a slight delay to this as it doesn't always work on first render otherwise\n    console.info(\"Summary Cards: \", summaryCards);\n    setTimeout(() => {\n      if (summariesEndRef.current && summaryCards.length > 0) {\n        var _summariesEndRef$curr;\n        (_summariesEndRef$curr = summariesEndRef.current) === null || _summariesEndRef$curr === void 0 ? void 0 : _summariesEndRef$curr.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    }, 0.1);\n  }, [summaryCards]);\n\n  //#region  GRPC Data VA Summary\n  useEffect(() => {\n    console.info(\"GRPC Data is\", grpcData);\n    const content = new Map();\n    let timestamp = \"\";\n    const header = \"Here's the virtual agent transfer summary\";\n    let contentRaw = \"\";\n    const summary = grpcData === null || grpcData === void 0 ? void 0 : grpcData.summary;\n    if (summary) {\n      console.info(\"grpc data.summary is present\", grpcData);\n      if (summary.call_reason && summary.call_reason !== null && summary.call_reason !== \"\") {\n        content.set(\"Contact Reason:\", summary.call_reason);\n        contentRaw += summary.call_reason;\n      }\n      if (summary.hand_off_reason && summary.hand_off_reason !== null && summary.hand_off_reason !== \"\") {\n        content.set(\"Handoff Reason:\", summary.hand_off_reason);\n        contentRaw += summary.hand_off_reason;\n      }\n      if (summary.details && summary.details !== null && summary.details !== \"\") {\n        contentRaw += summary.details;\n        const safeText = contentRaw.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        content.set(\"Details:\", \"<ul style = \\\"padding-inline-start: 1.5em;\\\">\" + safeText.split(\"*\").slice(1).map(item => `<li>${item.split(\"\\n\").slice().map(i => `${i}<br />`).join(\"\")} </li>`).join(\"\") + \"</ul>\");\n      }\n      console.info(\"content is\", content);\n    } else {\n      console.info(\"data.summary isnt present\", grpcData);\n    }\n\n    // Combine the parts into a formatted datetime\n    if (grpcData !== null && grpcData !== void 0 && grpcData.interactionDateTime) timestamp = grpcData === null || grpcData === void 0 ? void 0 : grpcData.interactionDateTime;\n    console.info(\"Formatted Date: \", timestamp);\n    if (summary !== null && summary !== void 0 && summary.hand_off_reason || summary !== null && summary !== void 0 && summary.details || summary !== null && summary !== void 0 && summary.call_reason) {\n      console.info(\"Summary is available\", summary.call_reason);\n      setSummaryCards(prevSummaryCards => {\n        var _contentRaw, _timestamp;\n        return [...prevSummaryCards, {\n          content: content !== null && content !== void 0 ? content : \"\",\n          contentRaw: (_contentRaw = contentRaw) !== null && _contentRaw !== void 0 ? _contentRaw : \"\",\n          timestamp: (_timestamp = timestamp) !== null && _timestamp !== void 0 ? _timestamp : \"\",\n          header: header !== null && header !== void 0 ? header : \"\",\n          widgetType: \"VAHSummary\",\n          actionable: false,\n          response: WellnessBreakResponse.NONE,\n          agentEngaged: null,\n          error: null\n        }];\n      });\n    } else console.info(\"Summary Not available\", content);\n  }, [grpcData]);\n  // #endregion\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflow: \"auto\"\n    },\n    children: summaryCards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"auto\"\n      },\n      children: [summaryCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [card.header && /*#__PURE__*/_jsxDEV(AssistantPanelHeader, {\n          header: card.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"10px\",\n            paddingBottom: \"10px\",\n            paddingRight: \"10px\"\n          },\n          children: renderCard(index, card)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: summariesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        width: \"100%\",\n        margin: \"20px\"\n      },\n      children: \"No summary available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(AssistantPanel, \"RLDZbXOjYNWvrJpyQvKHGpcenHU=\");\n_c = AssistantPanel;\nexport default AssistantPanel;\nvar _c;\n$RefreshReg$(_c, \"AssistantPanel\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","AssistantPanelHeader","FormatDateTime","SummaryCard","WellnessBreakResponse","jsxDEV","_jsxDEV","renderCard","index","card","formattedTimestamp","timestamp","console","info","content","contentRaw","widgetType","fileName","_jsxFileName","lineNumber","columnNumber","AssistantPanel","props","_s","summariesEndRef","grpcData","summary","call_reason","hand_off_reason","details","interactionDateTime","summaryCards","setSummaryCards","setTimeout","current","length","_summariesEndRef$curr","scrollIntoView","behavior","Map","header","set","safeText","replace","split","slice","map","item","i","join","prevSummaryCards","_contentRaw","_timestamp","actionable","response","NONE","agentEngaged","error","style","height","display","flexDirection","overflow","children","marginTop","flex","paddingLeft","paddingBottom","paddingRight","ref","width","margin","_c","$RefreshReg$"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/components/AssistantPanel/AssistantPanel.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport AssistantPanelHeader from \"./AssistantPanelHeader\";\nimport { FormatDateTime } from \"../../Utils/TimeUtils\";\nimport SummaryCard from \"../SummaryCard/SummaryCard\";\nimport { WellnessBreakError, WellnessBreakResponse } from \"../../Utils/WellnessBreakTypes\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../Store\";\n\ninterface SummaryCardMapping {\n  content: Map<string, string>;\n  contentRaw: string;\n  timestamp: string;\n  header: string;\n  widgetType: string;\n  actionable: boolean;\n  response: WellnessBreakResponse;\n  agentEngaged: boolean | null;\n  error: WellnessBreakError | null;\n}\n\nfunction renderCard(index: number, card: SummaryCardMapping): JSX.Element {\n  const formattedTimestamp = card.timestamp ? FormatDateTime(card.timestamp) : \"\";\n  console.info(\"Formatted Date: \", formattedTimestamp);\n\n  return <SummaryCard key={index} content={card.content} contentRaw={card.contentRaw} timestamp={formattedTimestamp} widgetType={card.widgetType} />;\n}\n\nconst AssistantPanel = (props: any): any => {\n  const summariesEndRef = useRef<null | HTMLDivElement>(null);\n  // const { grpcData } = useSelector((state: RootState) => state.VASummary);\n  const grpcData = useMemo(() => {\n    return {\n      summary: {\n        call_reason: \"Customer Inquiry\",\n        hand_off_reason: \"Escalation to Supervisor\",\n        details: \"*Issue with billing\\n*Requested refund\\n*Account update needed\"\n      },\n      interactionDateTime: \"23/Apr/2023:11:42:35\"\n    };\n  }, []);\n\n  const [summaryCards, setSummaryCards] = useState<SummaryCardMapping[]>([]);\n\n  useEffect(() => {\n    // when the summaryCards change, scroll to the bottom\n    // adding a slight delay to this as it doesn't always work on first render otherwise\n    console.info(\"Summary Cards: \", summaryCards);\n    setTimeout(() => {\n      if (summariesEndRef.current && summaryCards.length > 0) {\n        summariesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }, 0.1);\n  }, [summaryCards]);\n\n  //#region  GRPC Data VA Summary\n  useEffect(() => {\n    console.info(\"GRPC Data is\", grpcData);\n\n    const content = new Map<string, string>();\n    let timestamp = \"\";\n    const header = \"Here's the virtual agent transfer summary\";\n    let contentRaw = \"\";\n    const summary = grpcData?.summary;\n\n    if (summary) {\n      console.info(\"grpc data.summary is present\", grpcData);\n\n      if (summary.call_reason && summary.call_reason !== null && summary.call_reason !== \"\") {\n        content.set(\"Contact Reason:\", summary.call_reason);\n        contentRaw += summary.call_reason;\n      }\n      if (summary.hand_off_reason && summary.hand_off_reason !== null && summary.hand_off_reason !== \"\") {\n        content.set(\"Handoff Reason:\", summary.hand_off_reason);\n        contentRaw += summary.hand_off_reason;\n      }\n\n      if (summary.details && summary.details !== null && summary.details !== \"\") {\n        contentRaw += summary.details;\n        const safeText = contentRaw.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n        content.set(\n          \"Details:\",\n          \"<ul style = \\\"padding-inline-start: 1.5em;\\\">\" +\n            safeText\n              .split(\"*\")\n              .slice(1)\n              .map(\n                (item) =>\n                  `<li>${item\n                    .split(\"\\n\")\n                    .slice()\n                    .map((i) => `${i}<br />`)\n                    .join(\"\")} </li>`\n              )\n              .join(\"\") +\n            \"</ul>\"\n        );\n      }\n      console.info(\"content is\", content);\n    } else {\n      console.info(\"data.summary isnt present\", grpcData);\n    }\n\n    // Combine the parts into a formatted datetime\n    if (grpcData?.interactionDateTime) timestamp = grpcData?.interactionDateTime;\n\n    console.info(\"Formatted Date: \", timestamp);\n\n    if (summary?.hand_off_reason || summary?.details || summary?.call_reason) {\n      console.info(\"Summary is available\", summary.call_reason);\n      setSummaryCards((prevSummaryCards) => [\n        ...prevSummaryCards,\n        {\n          content: content ?? \"\",\n          contentRaw: contentRaw ?? \"\",\n          timestamp: timestamp ?? \"\",\n          header: header ?? \"\",\n          widgetType: \"VAHSummary\",\n          actionable: false,\n          response: WellnessBreakResponse.NONE,\n          agentEngaged: null,\n          error: null\n        }\n      ]);\n    } else console.info(\"Summary Not available\", content);\n  }, [grpcData]);\n  // #endregion\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"auto\"\n      }}\n    >\n      {summaryCards.length > 0 ? (\n        <div\n          style={{\n            marginTop: \"auto\"\n          }}\n        >\n          {summaryCards.map((card, index) => (\n            <div key={index} style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n\n              {card.header && <AssistantPanelHeader header={card.header} />}\n\n              <div\n                style={{\n                  paddingLeft: \"10px\",\n                  paddingBottom: \"10px\",\n                  paddingRight: \"10px\"\n                }}\n              >\n                {renderCard(index, card)}\n              </div>\n            </div>\n          ))}\n          <div ref={summariesEndRef}></div>\n        </div>\n      ) : (\n        <span style={{ width: \"100%\", margin: \"20px\" }}>No summary available</span>\n      )}\n    </div>\n  );\n};\n\nexport default AssistantPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}