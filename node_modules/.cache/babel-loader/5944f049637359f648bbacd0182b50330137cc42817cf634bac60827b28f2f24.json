{"ast":null,"code":"export let WellnessBreakResponse = /*#__PURE__*/function (WellnessBreakResponse) {\n  WellnessBreakResponse[\"NONE\"] = \"none\";\n  WellnessBreakResponse[\"ACCEPT\"] = \"accept\";\n  WellnessBreakResponse[\"REJECT\"] = \"reject\";\n  WellnessBreakResponse[\"DISMISS\"] = \"dismiss\";\n  WellnessBreakResponse[\"NOTIFICATION_TIMEOUT\"] = \"timeout\";\n  WellnessBreakResponse[\"NO_RESPONSE\"] = \"no_response\";\n  return WellnessBreakResponse;\n}({});\nexport let WellnessCardType = /*#__PURE__*/function (WellnessCardType) {\n  WellnessCardType[\"NONE\"] = \"none\";\n  WellnessCardType[\"QUESTION\"] = \"wellnessBreakQuestion\";\n  WellnessCardType[\"CTA_REQUEST\"] = \"wellnessBreakCTARequest\";\n  WellnessCardType[\"END_OF_BREAK\"] = \"endOfBreakMessage\";\n  return WellnessCardType;\n}({});\nexport let WellnessResponseSource = /*#__PURE__*/function (WellnessResponseSource) {\n  WellnessResponseSource[WellnessResponseSource[\"CARD\"] = 0] = \"CARD\";\n  WellnessResponseSource[WellnessResponseSource[\"NOTIFICATION\"] = 1] = \"NOTIFICATION\";\n  WellnessResponseSource[WellnessResponseSource[\"CTA\"] = 2] = \"CTA\";\n  return WellnessResponseSource;\n}({});\nexport let WellnessBreakError = /*#__PURE__*/function (WellnessBreakError) {\n  WellnessBreakError[WellnessBreakError[\"NONE\"] = 0] = \"NONE\";\n  WellnessBreakError[WellnessBreakError[\"CHANGE_STATE_TO_RESET_ERROR\"] = 1] = \"CHANGE_STATE_TO_RESET_ERROR\";\n  WellnessBreakError[WellnessBreakError[\"CHANGE_STATE_TO_AVAILABLE_ERROR\"] = 2] = \"CHANGE_STATE_TO_AVAILABLE_ERROR\";\n  WellnessBreakError[WellnessBreakError[\"GENERIC_ERROR\"] = 3] = \"GENERIC_ERROR\";\n  return WellnessBreakError;\n}({});\nexport let WellnessBreakMetricType = /*#__PURE__*/function (WellnessBreakMetricType) {\n  WellnessBreakMetricType[\"NONE\"] = \"none\";\n  WellnessBreakMetricType[\"BREAK_STARTED\"] = \"break_started\";\n  WellnessBreakMetricType[\"BREAK_ENDED\"] = \"break_ended\";\n  WellnessBreakMetricType[\"BREAK_WAITING_TO_START\"] = \"break_waiting_to_start\";\n  WellnessBreakMetricType[\"CARD_BREAK_ACCEPTED\"] = \"card_accepted\";\n  WellnessBreakMetricType[\"CARD_BREAK_REJECTED\"] = \"card_rejected\";\n  WellnessBreakMetricType[\"CTA_APPROVED\"] = \"CTA_approved\";\n  WellnessBreakMetricType[\"CTA_REJECTED\"] = \"CTA_rejected\";\n  WellnessBreakMetricType[\"CTA_USER_REQUEST\"] = \"CTA_user_break_requested\";\n  WellnessBreakMetricType[\"DISPLAY_CTA\"] = \"display_CTA\";\n  WellnessBreakMetricType[\"ERROR_CHANGE_STATE\"] = \"error_changing_state\";\n  WellnessBreakMetricType[\"GENERIC_ERROR\"] = \"generic_error\";\n  WellnessBreakMetricType[\"NO_RESPONSE\"] = \"no_response\";\n  WellnessBreakMetricType[\"NOTIFICATION_FIRED\"] = \"notification_fired\";\n  WellnessBreakMetricType[\"NOTIFICATION_ACCEPTED\"] = \"notification_accepted\";\n  WellnessBreakMetricType[\"NOTIFICATION_DISMISSED\"] = \"notification_dismissed\";\n  WellnessBreakMetricType[\"NOTIFICATION_REJECTED\"] = \"notification_rejected\";\n  WellnessBreakMetricType[\"NOTIFICATION_TIMEOUT\"] = \"notification_timeout\";\n  WellnessBreakMetricType[\"PROVIDE_BREAK_EVENT_RECEIVED\"] = \"provide_break_event_received\";\n  return WellnessBreakMetricType;\n}({});","map":{"version":3,"names":["WellnessBreakResponse","WellnessCardType","WellnessResponseSource","WellnessBreakError","WellnessBreakMetricType"],"sources":["/Users/ratbalas/Documents/Projects/temp/ai-assistant.github.io/src/Utils/WellnessBreakTypes.ts"],"sourcesContent":["export const enum WellnessBreakResponse {\n    NONE = \"none\",\n    ACCEPT = \"accept\",\n    REJECT = \"reject\",\n    DISMISS = \"dismiss\",\n    NOTIFICATION_TIMEOUT = \"timeout\",\n    NO_RESPONSE = \"no_response\"\n}\n\nexport const enum WellnessCardType {\n    NONE = \"none\",\n    QUESTION = \"wellnessBreakQuestion\",\n    CTA_REQUEST = \"wellnessBreakCTARequest\",\n    END_OF_BREAK = \"endOfBreakMessage\"\n}\n\nexport const enum WellnessResponseSource {\n    CARD,\n    NOTIFICATION,\n    CTA\n}\n\nexport enum WellnessBreakError {\n    NONE,\n    CHANGE_STATE_TO_RESET_ERROR,\n    CHANGE_STATE_TO_AVAILABLE_ERROR,\n    GENERIC_ERROR\n}\n\nexport const enum WellnessBreakMetricType {\n    NONE = \"none\",\n    BREAK_STARTED = \"break_started\",\n    BREAK_ENDED = \"break_ended\",\n    BREAK_WAITING_TO_START = \"break_waiting_to_start\",\n    CARD_BREAK_ACCEPTED = \"card_accepted\",\n    CARD_BREAK_REJECTED = \"card_rejected\",\n    CTA_APPROVED = \"CTA_approved\",\n    CTA_REJECTED = \"CTA_rejected\",\n    CTA_USER_REQUEST = \"CTA_user_break_requested\",\n    DISPLAY_CTA = \"display_CTA\",\n    ERROR_CHANGE_STATE= \"error_changing_state\",\n    GENERIC_ERROR= \"generic_error\",\n    NO_RESPONSE = \"no_response\",\n    NOTIFICATION_FIRED = \"notification_fired\",\n    NOTIFICATION_ACCEPTED = \"notification_accepted\",\n    NOTIFICATION_DISMISSED = \"notification_dismissed\",\n    NOTIFICATION_REJECTED = \"notification_rejected\",\n    NOTIFICATION_TIMEOUT = \"notification_timeout\",\n    PROVIDE_BREAK_EVENT_RECEIVED = \"provide_break_event_received\"\n}\n"],"mappings":"AAAA,WAAkBA,qBAAqB,0BAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAArBA,qBAAqB;EAAA,OAArBA,qBAAqB;AAAA;AASvC,WAAkBC,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;AAOlC,WAAkBC,sBAAsB,0BAAtBA,sBAAsB;EAAtBA,sBAAsB,CAAtBA,sBAAsB;EAAtBA,sBAAsB,CAAtBA,sBAAsB;EAAtBA,sBAAsB,CAAtBA,sBAAsB;EAAA,OAAtBA,sBAAsB;AAAA;AAMxC,WAAYC,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;AAO9B,WAAkBC,uBAAuB,0BAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAA,OAAvBA,uBAAuB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}