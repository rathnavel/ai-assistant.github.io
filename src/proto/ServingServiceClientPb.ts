/**
 * @fileoverview gRPC-Web generated client stub for com.cisco.wcc.ccai.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.20.0
// source: serving.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import * as serving_pb from "./serving_pb"; // proto import: "serving.proto"

export class AiInsightClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any }
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "text";

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorStreamingInsightServing = new grpcWeb.MethodDescriptor(
    "/com.cisco.wcc.ccai.v1.AiInsight/StreamingInsightServing",
    grpcWeb.MethodType.SERVER_STREAMING,
    serving_pb.StreamingInsightServingRequest,
    serving_pb.StreamingInsightServingResponse,
    (request: serving_pb.StreamingInsightServingRequest) => {
      return request.serializeBinary();
    },
    serving_pb.StreamingInsightServingResponse.deserializeBinary
  );

  streamingInsightServing(
    request: serving_pb.StreamingInsightServingRequest,
    metadata?: grpcWeb.Metadata
  ): grpcWeb.ClientReadableStream<serving_pb.StreamingInsightServingResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        "/com.cisco.wcc.ccai.v1.AiInsight/StreamingInsightServing",
      request,
      metadata || {},
      this.methodDescriptorStreamingInsightServing
    );
  }

  methodDescriptorInsightServing = new grpcWeb.MethodDescriptor(
    "/com.cisco.wcc.ccai.v1.AiInsight/InsightServing",
    grpcWeb.MethodType.UNARY,
    serving_pb.InsightsServingRequest,
    serving_pb.InsightsServingResponse,
    (request: serving_pb.InsightsServingRequest) => {
      return request.serializeBinary();
    },
    serving_pb.InsightsServingResponse.deserializeBinary
  );

  insightServing(
    request: serving_pb.InsightsServingRequest,
    metadata?: grpcWeb.Metadata | null
  ): Promise<serving_pb.InsightsServingResponse>;

  insightServing(
    request: serving_pb.InsightsServingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: serving_pb.InsightsServingResponse
    ) => void
  ): grpcWeb.ClientReadableStream<serving_pb.InsightsServingResponse>;

  insightServing(
    request: serving_pb.InsightsServingRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: serving_pb.InsightsServingResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/com.cisco.wcc.ccai.v1.AiInsight/InsightServing",
        request,
        metadata || {},
        this.methodDescriptorInsightServing,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/com.cisco.wcc.ccai.v1.AiInsight/InsightServing",
      request,
      metadata || {},
      this.methodDescriptorInsightServing
    );
  }
}
