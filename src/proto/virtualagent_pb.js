// source: virtualagent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = function () {
  return this || window || global || self || Function("return this")();
}.call(null);

var google_protobuf_struct_pb = require("google-protobuf/google/protobuf/struct_pb.js");
goog.object.extend(proto, google_protobuf_struct_pb);
var recognize_pb = require("./recognize_pb.js");
goog.object.extend(proto, recognize_pb);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.AgentTransfer", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.CallInsightType", null, global);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.CallInsightsResult",
  null,
  global
);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.Dtmf", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.DtmfEvents", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.EndVirtualAgent", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.ExecuteRequest", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.ExitEvent", null, global);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.ExitEvent.EventType",
  null,
  global
);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.InputConfigInfer", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.InputEvent", null, global);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.InputEvent.EventType",
  null,
  global
);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.InputMode", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.Intent", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.NLU", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.Prompt", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.VirtualAgent", null, global);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.VirtualAgentResult",
  null,
  global
);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType",
  null,
  global
);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.com.cisco.wcc.ccai.v1.DtmfEvents.repeatedFields_,
    null
  );
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.DtmfEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.DtmfEvents.displayName =
    "proto.com.cisco.wcc.ccai.v1.DtmfEvents";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.InputEvent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.InputEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.InputEvent.displayName =
    "proto.com.cisco.wcc.ccai.v1.InputEvent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.repeatedFields_,
    null
  );
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.VirtualAgentResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.displayName =
    "proto.com.cisco.wcc.ccai.v1.VirtualAgentResult";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.InputConfigInfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.InputConfigInfer.displayName =
    "proto.com.cisco.wcc.ccai.v1.InputConfigInfer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.ExitEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.ExitEvent.displayName =
    "proto.com.cisco.wcc.ccai.v1.ExitEvent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.NLU = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.com.cisco.wcc.ccai.v1.NLU.repeatedFields_,
    null
  );
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.NLU, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.NLU.displayName =
    "proto.com.cisco.wcc.ccai.v1.NLU";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.CallInsightsResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.CallInsightsResult.displayName =
    "proto.com.cisco.wcc.ccai.v1.CallInsightsResult";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.Intent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.Intent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.Intent.displayName =
    "proto.com.cisco.wcc.ccai.v1.Intent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.AgentTransfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.AgentTransfer.displayName =
    "proto.com.cisco.wcc.ccai.v1.AgentTransfer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.EndVirtualAgent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.displayName =
    "proto.com.cisco.wcc.ccai.v1.EndVirtualAgent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.Prompt = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.Prompt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.Prompt.displayName =
    "proto.com.cisco.wcc.ccai.v1.Prompt";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.ExecuteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.ExecuteRequest.displayName =
    "proto.com.cisco.wcc.ccai.v1.ExecuteRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.VirtualAgent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.VirtualAgent.displayName =
    "proto.com.cisco.wcc.ccai.v1.VirtualAgent";
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.DtmfEvents.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.DtmfEvents.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.DtmfEvents} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.DtmfEvents.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        dtmfEventsList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.DtmfEvents}
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.DtmfEvents();
  return proto.com.cisco.wcc.ccai.v1.DtmfEvents.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.DtmfEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.DtmfEvents}
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var values = /** @type {!Array<!proto.com.cisco.wcc.ccai.v1.Dtmf>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addDtmfEvents(values[i]);
        }
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.DtmfEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.DtmfEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getDtmfEventsList();
  if (f.length > 0) {
    writer.writePackedEnum(1, f);
  }
};

/**
 * repeated Dtmf dtmf_events = 1;
 * @return {!Array<!proto.com.cisco.wcc.ccai.v1.Dtmf>}
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.prototype.getDtmfEventsList =
  function () {
    return /** @type {!Array<!proto.com.cisco.wcc.ccai.v1.Dtmf>} */ (
      jspb.Message.getRepeatedField(this, 1)
    );
  };

/**
 * @param {!Array<!proto.com.cisco.wcc.ccai.v1.Dtmf>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.DtmfEvents} returns this
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.prototype.setDtmfEventsList = function (
  value
) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.Dtmf} value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.DtmfEvents} returns this
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.prototype.addDtmfEvents = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.DtmfEvents} returns this
 */
proto.com.cisco.wcc.ccai.v1.DtmfEvents.prototype.clearDtmfEventsList =
  function () {
    return this.setDtmfEventsList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.InputEvent.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.InputEvent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.InputEvent.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        eventType: jspb.Message.getFieldWithDefault(msg, 1, 0),
        name: jspb.Message.getFieldWithDefault(msg, 2, ""),
        parameters:
          (f = msg.getParameters()) &&
          google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.InputEvent();
  return proto.com.cisco.wcc.ccai.v1.InputEvent.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.InputEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value =
          /** @type {!proto.com.cisco.wcc.ccai.v1.InputEvent.EventType} */ (
            reader.readEnum()
          );
        msg.setEventType(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = new google_protobuf_struct_pb.Struct();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Struct.deserializeBinaryFromReader
        );
        msg.setParameters(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.InputEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.InputEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.EventType = {
  UNSPECIFIED: 0,
  CALL_START: 1,
  CALL_END: 2,
  CUSTOM: 3,
  NO_INPUT: 4,
  START_OF_DTMF: 5,
};

/**
 * optional EventType event_type = 1;
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent.EventType}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.getEventType = function () {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.InputEvent.EventType} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InputEvent.EventType} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.setEventType = function (
  value
) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Struct parameters = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.getParameters = function () {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3)
  );
};

/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.setParameters = function (
  value
) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.clearParameters = function () {
  return this.setParameters(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InputEvent.prototype.hasParameters = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        promptsList: jspb.Message.toObjectList(
          msg.getPromptsList(),
          proto.com.cisco.wcc.ccai.v1.Prompt.toObject,
          includeInstance
        ),
        responsePayload: jspb.Message.getFieldWithDefault(msg, 2, ""),
        nlu:
          (f = msg.getNlu()) &&
          proto.com.cisco.wcc.ccai.v1.NLU.toObject(includeInstance, f),
        inputMode: jspb.Message.getFieldWithDefault(msg, 4, 0),
        isSecure: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        executeRequest:
          (f = msg.getExecuteRequest()) &&
          proto.com.cisco.wcc.ccai.v1.ExecuteRequest.toObject(
            includeInstance,
            f
          ),
        responseType: jspb.Message.getFieldWithDefault(msg, 7, 0),
        inputConfigInfer:
          (f = msg.getInputConfigInfer()) &&
          proto.com.cisco.wcc.ccai.v1.InputConfigInfer.toObject(
            includeInstance,
            f
          ),
        noInputTimeoutMs: jspb.Message.getFieldWithDefault(msg, 9, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.VirtualAgentResult();
  return proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.com.cisco.wcc.ccai.v1.Prompt();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.Prompt.deserializeBinaryFromReader
          );
          msg.addPrompts(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setResponsePayload(value);
          break;
        case 3:
          var value = new proto.com.cisco.wcc.ccai.v1.NLU();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.NLU.deserializeBinaryFromReader
          );
          msg.setNlu(value);
          break;
        case 4:
          var value = /** @type {!proto.com.cisco.wcc.ccai.v1.InputMode} */ (
            reader.readEnum()
          );
          msg.setInputMode(value);
          break;
        case 5:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setIsSecure(value);
          break;
        case 6:
          var value = new proto.com.cisco.wcc.ccai.v1.ExecuteRequest();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.ExecuteRequest
              .deserializeBinaryFromReader
          );
          msg.setExecuteRequest(value);
          break;
        case 7:
          var value =
            /** @type {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType} */ (
              reader.readEnum()
            );
          msg.setResponseType(value);
          break;
        case 8:
          var value = new proto.com.cisco.wcc.ccai.v1.InputConfigInfer();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.InputConfigInfer
              .deserializeBinaryFromReader
          );
          msg.setInputConfigInfer(value);
          break;
        case 9:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setNoInputTimeoutMs(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getPromptsList();
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        1,
        f,
        proto.com.cisco.wcc.ccai.v1.Prompt.serializeBinaryToWriter
      );
    }
    f = message.getResponsePayload();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getNlu();
    if (f != null) {
      writer.writeMessage(
        3,
        f,
        proto.com.cisco.wcc.ccai.v1.NLU.serializeBinaryToWriter
      );
    }
    f = message.getInputMode();
    if (f !== 0.0) {
      writer.writeEnum(4, f);
    }
    f = message.getIsSecure();
    if (f) {
      writer.writeBool(5, f);
    }
    f = message.getExecuteRequest();
    if (f != null) {
      writer.writeMessage(
        6,
        f,
        proto.com.cisco.wcc.ccai.v1.ExecuteRequest.serializeBinaryToWriter
      );
    }
    f = message.getResponseType();
    if (f !== 0.0) {
      writer.writeEnum(7, f);
    }
    f = message.getInputConfigInfer();
    if (f != null) {
      writer.writeMessage(
        8,
        f,
        proto.com.cisco.wcc.ccai.v1.InputConfigInfer.serializeBinaryToWriter
      );
    }
    f = message.getNoInputTimeoutMs();
    if (f !== 0) {
      writer.writeInt32(9, f);
    }
  };

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType = {
  RESPONSE_FINAL: 0,
  RESPONSE_PARTIAL: 1,
};

/**
 * repeated Prompt prompts = 1;
 * @return {!Array<!proto.com.cisco.wcc.ccai.v1.Prompt>}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getPromptsList =
  function () {
    return /** @type{!Array<!proto.com.cisco.wcc.ccai.v1.Prompt>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.com.cisco.wcc.ccai.v1.Prompt,
        1
      )
    );
  };

/**
 * @param {!Array<!proto.com.cisco.wcc.ccai.v1.Prompt>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setPromptsList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.Prompt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.addPrompts = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.com.cisco.wcc.ccai.v1.Prompt,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.clearPromptsList =
  function () {
    return this.setPromptsList([]);
  };

/**
 * optional string response_payload = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getResponsePayload =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setResponsePayload =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional NLU nlu = 3;
 * @return {?proto.com.cisco.wcc.ccai.v1.NLU}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getNlu = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.NLU} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.NLU, 3)
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.NLU|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setNlu = function (
  value
) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.clearNlu =
  function () {
    return this.setNlu(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.hasNlu = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional InputMode input_mode = 4;
 * @return {!proto.com.cisco.wcc.ccai.v1.InputMode}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getInputMode =
  function () {
    return /** @type {!proto.com.cisco.wcc.ccai.v1.InputMode} */ (
      jspb.Message.getFieldWithDefault(this, 4, 0)
    );
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InputMode} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setInputMode =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 4, value);
  };

/**
 * optional bool is_secure = 5;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getIsSecure =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 5, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setIsSecure =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 5, value);
  };

/**
 * optional ExecuteRequest execute_request = 6;
 * @return {?proto.com.cisco.wcc.ccai.v1.ExecuteRequest}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getExecuteRequest =
  function () {
    return /** @type{?proto.com.cisco.wcc.ccai.v1.ExecuteRequest} */ (
      jspb.Message.getWrapperField(
        this,
        proto.com.cisco.wcc.ccai.v1.ExecuteRequest,
        6
      )
    );
  };

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.ExecuteRequest|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setExecuteRequest =
  function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.clearExecuteRequest =
  function () {
    return this.setExecuteRequest(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.hasExecuteRequest =
  function () {
    return jspb.Message.getField(this, 6) != null;
  };

/**
 * optional ResponseType response_type = 7;
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getResponseType =
  function () {
    return /** @type {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType} */ (
      jspb.Message.getFieldWithDefault(this, 7, 0)
    );
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.ResponseType} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setResponseType =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 7, value);
  };

/**
 * optional InputConfigInfer input_config_infer = 8;
 * @return {?proto.com.cisco.wcc.ccai.v1.InputConfigInfer}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getInputConfigInfer =
  function () {
    return /** @type{?proto.com.cisco.wcc.ccai.v1.InputConfigInfer} */ (
      jspb.Message.getWrapperField(
        this,
        proto.com.cisco.wcc.ccai.v1.InputConfigInfer,
        8
      )
    );
  };

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.InputConfigInfer|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setInputConfigInfer =
  function (value) {
    return jspb.Message.setWrapperField(this, 8, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.clearInputConfigInfer =
  function () {
    return this.setInputConfigInfer(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.hasInputConfigInfer =
  function () {
    return jspb.Message.getField(this, 8) != null;
  };

/**
 * optional int32 no_input_timeout_ms = 9;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.getNoInputTimeoutMs =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
  };

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgentResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgentResult.prototype.setNoInputTimeoutMs =
  function (value) {
    return jspb.Message.setProto3IntField(this, 9, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.InputConfigInfer.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.InputConfigInfer.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        dtmfConfig:
          (f = msg.getDtmfConfig()) &&
          recognize_pb.DTMFConfig.toObject(includeInstance, f),
        speechTimers:
          (f = msg.getSpeechTimers()) &&
          recognize_pb.SpeechTimers.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.InputConfigInfer();
  return proto.com.cisco.wcc.ccai.v1.InputConfigInfer.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new recognize_pb.DTMFConfig();
          reader.readMessage(
            value,
            recognize_pb.DTMFConfig.deserializeBinaryFromReader
          );
          msg.setDtmfConfig(value);
          break;
        case 2:
          var value = new recognize_pb.SpeechTimers();
          reader.readMessage(
            value,
            recognize_pb.SpeechTimers.deserializeBinaryFromReader
          );
          msg.setSpeechTimers(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.InputConfigInfer.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getDtmfConfig();
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        recognize_pb.DTMFConfig.serializeBinaryToWriter
      );
    }
    f = message.getSpeechTimers();
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        recognize_pb.SpeechTimers.serializeBinaryToWriter
      );
    }
  };

/**
 * optional DTMFConfig dtmf_config = 1;
 * @return {?proto.com.cisco.wcc.ccai.v1.DTMFConfig}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.getDtmfConfig =
  function () {
    return /** @type{?proto.com.cisco.wcc.ccai.v1.DTMFConfig} */ (
      jspb.Message.getWrapperField(this, recognize_pb.DTMFConfig, 1)
    );
  };

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.DTMFConfig|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.setDtmfConfig =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.clearDtmfConfig =
  function () {
    return this.setDtmfConfig(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.hasDtmfConfig =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

/**
 * optional SpeechTimers speech_timers = 2;
 * @return {?proto.com.cisco.wcc.ccai.v1.SpeechTimers}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.getSpeechTimers =
  function () {
    return /** @type{?proto.com.cisco.wcc.ccai.v1.SpeechTimers} */ (
      jspb.Message.getWrapperField(this, recognize_pb.SpeechTimers, 2)
    );
  };

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.SpeechTimers|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.setSpeechTimers =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.InputConfigInfer} returns this
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.clearSpeechTimers =
  function () {
    return this.setSpeechTimers(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InputConfigInfer.prototype.hasSpeechTimers =
  function () {
    return jspb.Message.getField(this, 2) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.ExitEvent.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.ExitEvent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.ExitEvent.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        eventType: jspb.Message.getFieldWithDefault(msg, 1, 0),
        name: jspb.Message.getFieldWithDefault(msg, 2, ""),
        metadata:
          (f = msg.getMetadata()) &&
          google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.ExitEvent();
  return proto.com.cisco.wcc.ccai.v1.ExitEvent.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.ExitEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value =
          /** @type {!proto.com.cisco.wcc.ccai.v1.ExitEvent.EventType} */ (
            reader.readEnum()
          );
        msg.setEventType(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = new google_protobuf_struct_pb.Struct();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Struct.deserializeBinaryFromReader
        );
        msg.setMetadata(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.ExitEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.ExitEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.EventType = {
  UNSPECIFIED: 0,
  VA_CALL_END: 1,
  AGENT_TRANSFER: 2,
  CUSTOM: 3,
};

/**
 * optional EventType event_type = 1;
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent.EventType}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.getEventType = function () {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.ExitEvent.EventType} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.ExitEvent.EventType} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.setEventType = function (
  value
) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Struct metadata = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.getMetadata = function () {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3)
  );
};

/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.setMetadata = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ExitEvent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.clearMetadata = function () {
  return this.setMetadata(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ExitEvent.prototype.hasMetadata = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.NLU.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.NLU.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.NLU.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.NLU} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.NLU.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        replyTextList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
        intent:
          (f = msg.getIntent()) &&
          proto.com.cisco.wcc.ccai.v1.Intent.toObject(includeInstance, f),
        agentTransfer:
          (f = msg.getAgentTransfer()) &&
          proto.com.cisco.wcc.ccai.v1.AgentTransfer.toObject(
            includeInstance,
            f
          ),
        endVirtualAgent:
          (f = msg.getEndVirtualAgent()) &&
          proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.toObject(
            includeInstance,
            f
          ),
        inputText: jspb.Message.getFieldWithDefault(msg, 5, ""),
        exitEvent:
          (f = msg.getExitEvent()) &&
          proto.com.cisco.wcc.ccai.v1.ExitEvent.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU}
 */
proto.com.cisco.wcc.ccai.v1.NLU.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.NLU();
  return proto.com.cisco.wcc.ccai.v1.NLU.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.NLU} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU}
 */
proto.com.cisco.wcc.ccai.v1.NLU.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addReplyText(value);
        break;
      case 2:
        var value = new proto.com.cisco.wcc.ccai.v1.Intent();
        reader.readMessage(
          value,
          proto.com.cisco.wcc.ccai.v1.Intent.deserializeBinaryFromReader
        );
        msg.setIntent(value);
        break;
      case 3:
        var value = new proto.com.cisco.wcc.ccai.v1.AgentTransfer();
        reader.readMessage(
          value,
          proto.com.cisco.wcc.ccai.v1.AgentTransfer.deserializeBinaryFromReader
        );
        msg.setAgentTransfer(value);
        break;
      case 4:
        var value = new proto.com.cisco.wcc.ccai.v1.EndVirtualAgent();
        reader.readMessage(
          value,
          proto.com.cisco.wcc.ccai.v1.EndVirtualAgent
            .deserializeBinaryFromReader
        );
        msg.setEndVirtualAgent(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setInputText(value);
        break;
      case 6:
        var value = new proto.com.cisco.wcc.ccai.v1.ExitEvent();
        reader.readMessage(
          value,
          proto.com.cisco.wcc.ccai.v1.ExitEvent.deserializeBinaryFromReader
        );
        msg.setExitEvent(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.NLU.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.NLU} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.NLU.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getReplyTextList();
  if (f.length > 0) {
    writer.writeRepeatedString(1, f);
  }
  f = message.getIntent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.cisco.wcc.ccai.v1.Intent.serializeBinaryToWriter
    );
  }
  f = message.getAgentTransfer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.cisco.wcc.ccai.v1.AgentTransfer.serializeBinaryToWriter
    );
  }
  f = message.getEndVirtualAgent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.serializeBinaryToWriter
    );
  }
  f = message.getInputText();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getExitEvent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.cisco.wcc.ccai.v1.ExitEvent.serializeBinaryToWriter
    );
  }
};

/**
 * repeated string reply_text = 1;
 * @return {!Array<string>}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.getReplyTextList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.setReplyTextList = function (value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.addReplyText = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.clearReplyTextList = function () {
  return this.setReplyTextList([]);
};

/**
 * optional Intent intent = 2;
 * @return {?proto.com.cisco.wcc.ccai.v1.Intent}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.getIntent = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.Intent} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.Intent, 2)
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.Intent|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.setIntent = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.clearIntent = function () {
  return this.setIntent(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.hasIntent = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional AgentTransfer agent_transfer = 3;
 * @return {?proto.com.cisco.wcc.ccai.v1.AgentTransfer}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.getAgentTransfer = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.AgentTransfer} */ (
    jspb.Message.getWrapperField(
      this,
      proto.com.cisco.wcc.ccai.v1.AgentTransfer,
      3
    )
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.AgentTransfer|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.setAgentTransfer = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.clearAgentTransfer = function () {
  return this.setAgentTransfer(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.hasAgentTransfer = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional EndVirtualAgent end_virtual_agent = 4;
 * @return {?proto.com.cisco.wcc.ccai.v1.EndVirtualAgent}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.getEndVirtualAgent = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.EndVirtualAgent} */ (
    jspb.Message.getWrapperField(
      this,
      proto.com.cisco.wcc.ccai.v1.EndVirtualAgent,
      4
    )
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.EndVirtualAgent|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.setEndVirtualAgent = function (
  value
) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.clearEndVirtualAgent = function () {
  return this.setEndVirtualAgent(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.hasEndVirtualAgent = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional string input_text = 5;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.getInputText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.setInputText = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional ExitEvent exit_event = 6;
 * @return {?proto.com.cisco.wcc.ccai.v1.ExitEvent}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.getExitEvent = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.ExitEvent} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.ExitEvent, 6)
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.ExitEvent|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.setExitEvent = function (value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.NLU} returns this
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.clearExitEvent = function () {
  return this.setExitEvent(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.NLU.prototype.hasExitEvent = function () {
  return jspb.Message.getField(this, 6) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.CallInsightsResult.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.CallInsightsResult.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.CallInsightsResult.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        content: jspb.Message.getFieldWithDefault(msg, 1, ""),
        callinsighttype: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult}
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.CallInsightsResult();
  return proto.com.cisco.wcc.ccai.v1.CallInsightsResult.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult}
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setContent(value);
          break;
        case 2:
          var value =
            /** @type {!proto.com.cisco.wcc.ccai.v1.CallInsightType} */ (
              reader.readEnum()
            );
          msg.setCallinsighttype(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.CallInsightsResult.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getContent();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getCallinsighttype();
    if (f !== 0.0) {
      writer.writeEnum(2, f);
    }
  };

/**
 * optional string content = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.prototype.getContent =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.prototype.setContent = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional CallInsightType callInsightType = 2;
 * @return {!proto.com.cisco.wcc.ccai.v1.CallInsightType}
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.prototype.getCallinsighttype =
  function () {
    return /** @type {!proto.com.cisco.wcc.ccai.v1.CallInsightType} */ (
      jspb.Message.getFieldWithDefault(this, 2, 0)
    );
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.CallInsightType} value
 * @return {!proto.com.cisco.wcc.ccai.v1.CallInsightsResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.CallInsightsResult.prototype.setCallinsighttype =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 2, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.Intent.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.Intent.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.Intent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.Intent.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ""),
        displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
        parameters:
          (f = msg.getParameters()) &&
          google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
        matchConfidence: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          4,
          0.0
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent}
 */
proto.com.cisco.wcc.ccai.v1.Intent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.Intent();
  return proto.com.cisco.wcc.ccai.v1.Intent.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.Intent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent}
 */
proto.com.cisco.wcc.ccai.v1.Intent.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setDisplayName(value);
        break;
      case 3:
        var value = new google_protobuf_struct_pb.Struct();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Struct.deserializeBinaryFromReader
        );
        msg.setParameters(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setMatchConfidence(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.Intent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.Intent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.Intent.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getMatchConfidence();
  if (f !== 0.0) {
    writer.writeFloat(4, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent} returns this
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.getDisplayName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent} returns this
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.setDisplayName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Struct parameters = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.getParameters = function () {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3)
  );
};

/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent} returns this
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.setParameters = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent} returns this
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.clearParameters = function () {
  return this.setParameters(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.hasParameters = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional float match_confidence = 4;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.getMatchConfidence = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Intent} returns this
 */
proto.com.cisco.wcc.ccai.v1.Intent.prototype.setMatchConfidence = function (
  value
) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.AgentTransfer.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.AgentTransfer.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.AgentTransfer} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.AgentTransfer.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        metadata:
          (f = msg.getMetadata()) &&
          google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentTransfer}
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.AgentTransfer();
  return proto.com.cisco.wcc.ccai.v1.AgentTransfer.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.AgentTransfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentTransfer}
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new google_protobuf_struct_pb.Struct();
          reader.readMessage(
            value,
            google_protobuf_struct_pb.Struct.deserializeBinaryFromReader
          );
          msg.setMetadata(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.AgentTransfer.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.AgentTransfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};

/**
 * optional google.protobuf.Struct metadata = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.prototype.getMetadata = function () {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1)
  );
};

/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentTransfer} returns this
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.prototype.setMetadata = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentTransfer} returns this
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.prototype.clearMetadata =
  function () {
    return this.setMetadata(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.AgentTransfer.prototype.hasMetadata = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        metadata:
          (f = msg.getMetadata()) &&
          google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent}
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.EndVirtualAgent();
  return proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent}
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new google_protobuf_struct_pb.Struct();
          reader.readMessage(
            value,
            google_protobuf_struct_pb.Struct.deserializeBinaryFromReader
          );
          msg.setMetadata(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};

/**
 * optional google.protobuf.Struct metadata = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.prototype.getMetadata =
  function () {
    return /** @type{?proto.google.protobuf.Struct} */ (
      jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1)
    );
  };

/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent} returns this
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.prototype.setMetadata = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.EndVirtualAgent} returns this
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.prototype.clearMetadata =
  function () {
    return this.setMetadata(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.EndVirtualAgent.prototype.hasMetadata =
  function () {
    return jspb.Message.getField(this, 1) != null;
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.Prompt.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.Prompt.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.Prompt} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.Prompt.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        text: jspb.Message.getFieldWithDefault(msg, 1, ""),
        audioUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
        audioContent: msg.getAudioContent_asB64(),
        bargein: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        pb_final: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.Prompt();
  return proto.com.cisco.wcc.ccai.v1.Prompt.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.Prompt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setText(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAudioUri(value);
        break;
      case 3:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setAudioContent(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setBargein(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setFinal(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.Prompt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.Prompt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.Prompt.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAudioUri();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getAudioContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(3, f);
  }
  f = message.getBargein();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getFinal();
  if (f) {
    writer.writeBool(5, f);
  }
};

/**
 * optional string text = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt} returns this
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.setText = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string audio_uri = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getAudioUri = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt} returns this
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.setAudioUri = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bytes audio_content = 3;
 * @return {!(string|Uint8Array)}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getAudioContent = function () {
  return /** @type {!(string|Uint8Array)} */ (
    jspb.Message.getFieldWithDefault(this, 3, "")
  );
};

/**
 * optional bytes audio_content = 3;
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getAudioContent_asB64 =
  function () {
    return /** @type {string} */ (
      jspb.Message.bytesAsB64(this.getAudioContent())
    );
  };

/**
 * optional bytes audio_content = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioContent()`
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getAudioContent_asU8 =
  function () {
    return /** @type {!Uint8Array} */ (
      jspb.Message.bytesAsU8(this.getAudioContent())
    );
  };

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt} returns this
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.setAudioContent = function (
  value
) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};

/**
 * optional bool bargein = 4;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getBargein = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt} returns this
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.setBargein = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool final = 5;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.getFinal = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Prompt} returns this
 */
proto.com.cisco.wcc.ccai.v1.Prompt.prototype.setFinal = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.ExecuteRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.ExecuteRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.ExecuteRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        eventName: jspb.Message.getFieldWithDefault(msg, 1, ""),
        eventData: jspb.Message.getFieldWithDefault(msg, 2, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest}
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.ExecuteRequest();
  return proto.com.cisco.wcc.ccai.v1.ExecuteRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest}
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setEventName(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setEventData(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.ExecuteRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEventName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEventData();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string event_name = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.prototype.getEventName =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.prototype.setEventName = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string event_data = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.prototype.getEventData =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ExecuteRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.ExecuteRequest.prototype.setEventData = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.VirtualAgent.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.VirtualAgent.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        virtualagentid: jspb.Message.getFieldWithDefault(msg, 1, ""),
        virtualagentname: jspb.Message.getFieldWithDefault(msg, 2, ""),
        isdefault: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        additionalattributesMap: (f = msg.getAdditionalattributesMap())
          ? f.toObject(includeInstance, undefined)
          : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgent}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.VirtualAgent();
  return proto.com.cisco.wcc.ccai.v1.VirtualAgent.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgent}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setVirtualagentid(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setVirtualagentname(value);
          break;
        case 3:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setIsdefault(value);
          break;
        case 4:
          var value = msg.getAdditionalattributesMap();
          reader.readMessage(value, function (message, reader) {
            jspb.Map.deserializeBinary(
              message,
              reader,
              jspb.BinaryReader.prototype.readString,
              jspb.BinaryReader.prototype.readString,
              null,
              "",
              ""
            );
          });
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.VirtualAgent.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getVirtualagentid();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getVirtualagentname();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getIsdefault();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getAdditionalattributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      4,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    );
  }
};

/**
 * optional string virtualAgentId = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.getVirtualagentid =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.setVirtualagentid =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional string virtualAgentName = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.getVirtualagentname =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.setVirtualagentname =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional bool isDefault = 3;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.getIsdefault = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.setIsdefault = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * map<string, string> additionalAttributes = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.getAdditionalattributesMap =
  function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate, null)
    );
  };

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.VirtualAgent} returns this
 */
proto.com.cisco.wcc.ccai.v1.VirtualAgent.prototype.clearAdditionalattributesMap =
  function () {
    this.getAdditionalattributesMap().clear();
    return this;
  };

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.Dtmf = {
  TELEPHONY_DTMF_UNSPECIFIED: 0,
  DTMF_ONE: 1,
  DTMF_TWO: 2,
  DTMF_THREE: 3,
  DTMF_FOUR: 4,
  DTMF_FIVE: 5,
  DTMF_SIX: 6,
  DTMF_SEVEN: 7,
  DTMF_EIGHT: 8,
  DTMF_NINE: 9,
  DTMF_ZERO: 10,
  DTMF_A: 11,
  DTMF_B: 12,
  DTMF_C: 13,
  DTMF_D: 14,
  DTMF_STAR: 15,
  DTMF_POUND: 16,
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InputMode = {
  INPUT_MODE_UNSPECIFIED: 0,
  INPUT_VOICE: 1,
  INPUT_DTMF: 2,
  INPUT_VOICE_DTMF: 3,
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.CallInsightType = {
  UNSPECIFIED: 0,
  VA_CALL_SUMMARY: 1,
};

goog.object.extend(exports, proto.com.cisco.wcc.ccai.v1);
