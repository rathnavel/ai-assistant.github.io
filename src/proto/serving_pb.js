// source: serving.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var messages_pb = require('./messages_pb.js');
goog.object.extend(proto, messages_pb);
var suggestions_pb = require('./suggestions_pb.js');
goog.object.extend(proto, suggestions_pb);
var recognize_pb = require('./recognize_pb.js');
goog.object.extend(proto, recognize_pb);
var virtualagent_pb = require('./virtualagent_pb.js');
goog.object.extend(proto, virtualagent_pb);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.AgentDetails', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightServingRequest', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightServingResponse', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightServingResponse.Role', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceProvider', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceType', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightsServingRequest', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.InsightType', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightsServingResponse', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.ServiceProvider', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.ResponseContent', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.ResponseContent.StreamResponseContentCase', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest', null, global);
goog.exportSymbol('proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.displayName = 'proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.InsightServingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.InsightServingRequest.displayName = 'proto.com.cisco.wcc.ccai.v1.InsightServingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.InsightsServingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.displayName = 'proto.com.cisco.wcc.ccai.v1.InsightsServingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.repeatedFields_, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.InsightsServingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.displayName = 'proto.com.cisco.wcc.ccai.v1.InsightsServingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.displayName = 'proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.AgentDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.AgentDetails.displayName = 'proto.com.cisco.wcc.ccai.v1.AgentDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.InsightServingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.InsightServingResponse.displayName = 'proto.com.cisco.wcc.ccai.v1.InsightServingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.ResponseContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.ResponseContent.displayName = 'proto.com.cisco.wcc.ccai.v1.ResponseContent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    insightservingrequest: (f = msg.getInsightservingrequest()) && proto.com.cisco.wcc.ccai.v1.InsightServingRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest;
  return proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.cisco.wcc.ccai.v1.InsightServingRequest;
      reader.readMessage(value,proto.com.cisco.wcc.ccai.v1.InsightServingRequest.deserializeBinaryFromReader);
      msg.setInsightservingrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInsightservingrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.cisco.wcc.ccai.v1.InsightServingRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional InsightServingRequest insightServingRequest = 1;
 * @return {?proto.com.cisco.wcc.ccai.v1.InsightServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.prototype.getInsightservingrequest = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.InsightServingRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.InsightServingRequest, 1));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.InsightServingRequest|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest} returns this
*/
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.prototype.setInsightservingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.prototype.clearInsightservingrequest = function() {
  return this.setInsightservingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingRequest.prototype.hasInsightservingrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.InsightServingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orgid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    realtimetranscripts: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    historicaltranscripts: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    realtimeagentassist: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    historicalagentassist: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    realtimemessage: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    historicalmessage: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    historicalvirtualagent: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    agentdetails: (f = msg.getAgentdetails()) && proto.com.cisco.wcc.ccai.v1.AgentDetails.toObject(includeInstance, f),
    messageid: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.InsightServingRequest;
  return proto.com.cisco.wcc.ccai.v1.InsightServingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRealtimetranscripts(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHistoricaltranscripts(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRealtimeagentassist(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHistoricalagentassist(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRealtimemessage(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHistoricalmessage(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHistoricalvirtualagent(value);
      break;
    case 11:
      var value = new proto.com.cisco.wcc.ccai.v1.AgentDetails;
      reader.readMessage(value,proto.com.cisco.wcc.ccai.v1.AgentDetails.deserializeBinaryFromReader);
      msg.setAgentdetails(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.InsightServingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRealtimetranscripts();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getHistoricaltranscripts();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRealtimeagentassist();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getHistoricalagentassist();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getRealtimemessage();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getHistoricalmessage();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getHistoricalvirtualagent();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getAgentdetails();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.com.cisco.wcc.ccai.v1.AgentDetails.serializeBinaryToWriter
    );
  }
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string conversationId = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getConversationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setConversationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string orgId = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setOrgid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool realTimeTranscripts = 3;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getRealtimetranscripts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setRealtimetranscripts = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool historicalTranscripts = 4;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getHistoricaltranscripts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setHistoricaltranscripts = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool realtimeAgentAssist = 5;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getRealtimeagentassist = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setRealtimeagentassist = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool historicalAgentAssist = 6;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getHistoricalagentassist = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setHistoricalagentassist = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool realTimeMessage = 7;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getRealtimemessage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setRealtimemessage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool historicalMessage = 8;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getHistoricalmessage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setHistoricalmessage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool historicalVirtualAgent = 9;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getHistoricalvirtualagent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setHistoricalvirtualagent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional AgentDetails agentDetails = 11;
 * @return {?proto.com.cisco.wcc.ccai.v1.AgentDetails}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getAgentdetails = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.AgentDetails} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.AgentDetails, 11));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.AgentDetails|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
*/
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setAgentdetails = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.clearAgentdetails = function() {
  return this.setAgentdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.hasAgentdetails = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string messageId = 12;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingRequest.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messageid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orgid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    insighttype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.InsightsServingRequest;
  return proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 4:
      var value = /** @type {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.InsightType} */ (reader.readEnum());
      msg.setInsighttype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInsighttype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.InsightType = {
  DEFAULT_TRANSCRIPTION: 0,
  AGENT_ANSWERS: 1,
  TRANSCRIPTION: 2,
  VIRTUAL_AGENT: 3,
  MESSAGE: 4,
  CALL_INSIGHTS: 5
};

/**
 * optional string conversationId = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.getConversationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.setConversationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string messageId = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string orgId = 3;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.setOrgid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional InsightType insightType = 4;
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.InsightType}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.getInsighttype = function() {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.InsightType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.InsightType} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingRequest} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingRequest.prototype.setInsighttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messageid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orgid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    starttimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endtimestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    configid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languagecode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    insightprovider: jspb.Message.getFieldWithDefault(msg, 8, 0),
    responsecontentList: jspb.Message.toObjectList(msg.getResponsecontentList(),
    proto.com.cisco.wcc.ccai.v1.ResponseContent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.InsightsServingResponse;
  return proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtimestamp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguagecode(value);
      break;
    case 8:
      var value = /** @type {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.ServiceProvider} */ (reader.readEnum());
      msg.setInsightprovider(value);
      break;
    case 9:
      var value = new proto.com.cisco.wcc.ccai.v1.ResponseContent;
      reader.readMessage(value,proto.com.cisco.wcc.ccai.v1.ResponseContent.deserializeBinaryFromReader);
      msg.addResponsecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStarttimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEndtimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getConfigid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguagecode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInsightprovider();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getResponsecontentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.com.cisco.wcc.ccai.v1.ResponseContent.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.ServiceProvider = {
  DEFAULT: 0,
  CISCO: 1,
  GOOGLE: 2,
  NUANCE: 3
};

/**
 * optional string conversationId = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getConversationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setConversationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string messageId = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string orgId = 3;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setOrgid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 startTimestamp = 4;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getStarttimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setStarttimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 endTimestamp = 5;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getEndtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setEndtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string configId = 6;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getConfigid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setConfigid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageCode = 7;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getLanguagecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setLanguagecode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ServiceProvider insightProvider = 8;
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.ServiceProvider}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getInsightprovider = function() {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.ServiceProvider} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.ServiceProvider} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setInsightprovider = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * repeated ResponseContent responseContent = 9;
 * @return {!Array<!proto.com.cisco.wcc.ccai.v1.ResponseContent>}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.getResponsecontentList = function() {
  return /** @type{!Array<!proto.com.cisco.wcc.ccai.v1.ResponseContent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.cisco.wcc.ccai.v1.ResponseContent, 9));
};


/**
 * @param {!Array<!proto.com.cisco.wcc.ccai.v1.ResponseContent>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
*/
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.setResponsecontentList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.com.cisco.wcc.ccai.v1.ResponseContent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent}
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.addResponsecontent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.com.cisco.wcc.ccai.v1.ResponseContent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightsServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightsServingResponse.prototype.clearResponsecontentList = function() {
  return this.setResponsecontentList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    insightservingresponse: (f = msg.getInsightservingresponse()) && proto.com.cisco.wcc.ccai.v1.InsightServingResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse;
  return proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.cisco.wcc.ccai.v1.InsightServingResponse;
      reader.readMessage(value,proto.com.cisco.wcc.ccai.v1.InsightServingResponse.deserializeBinaryFromReader);
      msg.setInsightservingresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInsightservingresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.cisco.wcc.ccai.v1.InsightServingResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional InsightServingResponse insightServingResponse = 1;
 * @return {?proto.com.cisco.wcc.ccai.v1.InsightServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.prototype.getInsightservingresponse = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.InsightServingResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.InsightServingResponse, 1));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.InsightServingResponse|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse} returns this
*/
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.prototype.setInsightservingresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.prototype.clearInsightservingresponse = function() {
  return this.setInsightservingresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.StreamingInsightServingResponse.prototype.hasInsightservingresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.AgentDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.AgentDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    agentid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentDetails}
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.AgentDetails;
  return proto.com.cisco.wcc.ccai.v1.AgentDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.AgentDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentDetails}
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.AgentDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.AgentDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgentid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string agentId = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.prototype.getAgentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.AgentDetails} returns this
 */
proto.com.cisco.wcc.ccai.v1.AgentDetails.prototype.setAgentid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.InsightServingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conversationid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    roleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    utteranceid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    role: jspb.Message.getFieldWithDefault(msg, 5, 0),
    insighttype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    insightprovider: jspb.Message.getFieldWithDefault(msg, 7, 0),
    publishtimestamp: jspb.Message.getFieldWithDefault(msg, 8, 0),
    starttimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    endtimestamp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    isfinal: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    messageid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    configid: jspb.Message.getFieldWithDefault(msg, 14, ""),
    languagecode: jspb.Message.getFieldWithDefault(msg, 15, ""),
    responsecontent: (f = msg.getResponsecontent()) && proto.com.cisco.wcc.ccai.v1.ResponseContent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.InsightServingResponse;
  return proto.com.cisco.wcc.ccai.v1.InsightServingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtteranceid(value);
      break;
    case 5:
      var value = /** @type {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 6:
      var value = /** @type {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceType} */ (reader.readEnum());
      msg.setInsighttype(value);
      break;
    case 7:
      var value = /** @type {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceProvider} */ (reader.readEnum());
      msg.setInsightprovider(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublishtimestamp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtimestamp(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfinal(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigid(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguagecode(value);
      break;
    case 12:
      var value = new proto.com.cisco.wcc.ccai.v1.ResponseContent;
      reader.readMessage(value,proto.com.cisco.wcc.ccai.v1.ResponseContent.deserializeBinaryFromReader);
      msg.setResponsecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.InsightServingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConversationid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRoleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUtteranceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getInsighttype();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getInsightprovider();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getPublishtimestamp();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getStarttimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getEndtimestamp();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getIsfinal();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getConfigid();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLanguagecode();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getResponsecontent();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.com.cisco.wcc.ccai.v1.ResponseContent.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.Role = {
  IVR: 0,
  CALLER: 1,
  AGENT: 2
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceType = {
  DEFAULT_TRANSCRIPTION: 0,
  AGENT_ANSWERS: 1,
  TRANSCRIPTION: 2,
  VIRTUAL_AGENT: 3,
  MESSAGE: 4,
  CALL_INSIGHTS: 5
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceProvider = {
  DEFAULT: 0,
  CISCO: 1,
  GOOGLE: 2,
  NUANCE: 3
};

/**
 * optional string orgId = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setOrgid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string conversationId = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getConversationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setConversationid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string roleId = 3;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getRoleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setRoleid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string utteranceId = 4;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getUtteranceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setUtteranceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Role role = 5;
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.Role}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getRole = function() {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.Role} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.Role} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ServiceType insightType = 6;
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceType}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getInsighttype = function() {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceType} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setInsighttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional ServiceProvider insightProvider = 7;
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceProvider}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getInsightprovider = function() {
  return /** @type {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceProvider} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse.ServiceProvider} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setInsightprovider = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional int64 publishTimestamp = 8;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getPublishtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setPublishtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 startTimestamp = 9;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getStarttimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setStarttimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 endTimestamp = 10;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getEndtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setEndtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool isFinal = 11;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getIsfinal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setIsfinal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string messageId = 13;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string configId = 14;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getConfigid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setConfigid = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string languageCode = 15;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getLanguagecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setLanguagecode = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional ResponseContent responseContent = 12;
 * @return {?proto.com.cisco.wcc.ccai.v1.ResponseContent}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.getResponsecontent = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.ResponseContent} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.ResponseContent, 12));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.ResponseContent|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
*/
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.setResponsecontent = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.InsightServingResponse} returns this
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.clearResponsecontent = function() {
  return this.setResponsecontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.InsightServingResponse.prototype.hasResponsecontent = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.StreamResponseContentCase = {
  STREAM_RESPONSE_CONTENT_NOT_SET: 0,
  RAWCONTENT: 1,
  RECOGNITIONRESULT: 2,
  AGENTANSWERRESULT: 3,
  MESSAGERESULT: 4,
  VIRTUALAGENTRESULT: 5,
  CALLINSIGHTSRESULT: 6
};

/**
 * @return {proto.com.cisco.wcc.ccai.v1.ResponseContent.StreamResponseContentCase}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getStreamResponseContentCase = function() {
  return /** @type {proto.com.cisco.wcc.ccai.v1.ResponseContent.StreamResponseContentCase} */(jspb.Message.computeOneofCase(this, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cisco.wcc.ccai.v1.ResponseContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cisco.wcc.ccai.v1.ResponseContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    rawcontent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recognitionresult: (f = msg.getRecognitionresult()) && recognize_pb.StreamingRecognitionResult.toObject(includeInstance, f),
    agentanswerresult: (f = msg.getAgentanswerresult()) && suggestions_pb.AgentAnswer.toObject(includeInstance, f),
    messageresult: (f = msg.getMessageresult()) && messages_pb.Message.toObject(includeInstance, f),
    virtualagentresult: (f = msg.getVirtualagentresult()) && virtualagent_pb.NLU.toObject(includeInstance, f),
    callinsightsresult: (f = msg.getCallinsightsresult()) && virtualagent_pb.CallInsightsResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.ResponseContent;
  return proto.com.cisco.wcc.ccai.v1.ResponseContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.ResponseContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawcontent(value);
      break;
    case 2:
      var value = new recognize_pb.StreamingRecognitionResult;
      reader.readMessage(value,recognize_pb.StreamingRecognitionResult.deserializeBinaryFromReader);
      msg.setRecognitionresult(value);
      break;
    case 3:
      var value = new suggestions_pb.AgentAnswer;
      reader.readMessage(value,suggestions_pb.AgentAnswer.deserializeBinaryFromReader);
      msg.setAgentanswerresult(value);
      break;
    case 4:
      var value = new messages_pb.Message;
      reader.readMessage(value,messages_pb.Message.deserializeBinaryFromReader);
      msg.setMessageresult(value);
      break;
    case 5:
      var value = new virtualagent_pb.NLU;
      reader.readMessage(value,virtualagent_pb.NLU.deserializeBinaryFromReader);
      msg.setVirtualagentresult(value);
      break;
    case 6:
      var value = new virtualagent_pb.CallInsightsResult;
      reader.readMessage(value,virtualagent_pb.CallInsightsResult.deserializeBinaryFromReader);
      msg.setCallinsightsresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.ResponseContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.ResponseContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecognitionresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      recognize_pb.StreamingRecognitionResult.serializeBinaryToWriter
    );
  }
  f = message.getAgentanswerresult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      suggestions_pb.AgentAnswer.serializeBinaryToWriter
    );
  }
  f = message.getMessageresult();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      messages_pb.Message.serializeBinaryToWriter
    );
  }
  f = message.getVirtualagentresult();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      virtualagent_pb.NLU.serializeBinaryToWriter
    );
  }
  f = message.getCallinsightsresult();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      virtualagent_pb.CallInsightsResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string rawContent = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getRawcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.setRawcontent = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.clearRawcontent = function() {
  return jspb.Message.setOneofField(this, 1, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.hasRawcontent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StreamingRecognitionResult recognitionResult = 2;
 * @return {?proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getRecognitionresult = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} */ (
    jspb.Message.getWrapperField(this, recognize_pb.StreamingRecognitionResult, 2));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
*/
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.setRecognitionresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.clearRecognitionresult = function() {
  return this.setRecognitionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.hasRecognitionresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AgentAnswer agentAnswerResult = 3;
 * @return {?proto.com.cisco.wcc.ccai.v1.AgentAnswer}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getAgentanswerresult = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.AgentAnswer} */ (
    jspb.Message.getWrapperField(this, suggestions_pb.AgentAnswer, 3));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.AgentAnswer|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
*/
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.setAgentanswerresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.clearAgentanswerresult = function() {
  return this.setAgentanswerresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.hasAgentanswerresult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Message messageResult = 4;
 * @return {?proto.com.cisco.wcc.ccai.v1.Message}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getMessageresult = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.Message} */ (
    jspb.Message.getWrapperField(this, messages_pb.Message, 4));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.Message|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
*/
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.setMessageresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.clearMessageresult = function() {
  return this.setMessageresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.hasMessageresult = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NLU virtualAgentResult = 5;
 * @return {?proto.com.cisco.wcc.ccai.v1.NLU}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getVirtualagentresult = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.NLU} */ (
    jspb.Message.getWrapperField(this, virtualagent_pb.NLU, 5));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.NLU|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
*/
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.setVirtualagentresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.clearVirtualagentresult = function() {
  return this.setVirtualagentresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.hasVirtualagentresult = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CallInsightsResult callInsightsResult = 6;
 * @return {?proto.com.cisco.wcc.ccai.v1.CallInsightsResult}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.getCallinsightsresult = function() {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.CallInsightsResult} */ (
    jspb.Message.getWrapperField(this, virtualagent_pb.CallInsightsResult, 6));
};


/**
 * @param {?proto.com.cisco.wcc.ccai.v1.CallInsightsResult|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
*/
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.setCallinsightsresult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.com.cisco.wcc.ccai.v1.ResponseContent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.ResponseContent} returns this
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.clearCallinsightsresult = function() {
  return this.setCallinsightsresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.ResponseContent.prototype.hasCallinsightsresult = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.com.cisco.wcc.ccai.v1);
