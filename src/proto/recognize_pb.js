// source: recognize.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = function () {
  return this || window || global || self || Function("return this")();
}.call(null);

goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.Duration", null, global);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.OutputEvent", null, global);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative",
  null,
  global
);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.Status", null, global);
goog.exportSymbol(
  "proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult",
  null,
  global
);
goog.exportSymbol("proto.com.cisco.wcc.ccai.v1.WordInfo", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.repeatedFields_,
    null
  );
};
goog.inherits(
  proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.displayName =
    "proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.repeatedFields_,
    null
  );
};
goog.inherits(
  proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.displayName =
    "proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.WordInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.WordInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.WordInfo.displayName =
    "proto.com.cisco.wcc.ccai.v1.WordInfo";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.Duration = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.Duration.displayName =
    "proto.com.cisco.wcc.ccai.v1.Duration";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cisco.wcc.ccai.v1.Status = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cisco.wcc.ccai.v1.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.cisco.wcc.ccai.v1.Status.displayName =
    "proto.com.cisco.wcc.ccai.v1.Status";
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.repeatedFields_ = [1, 8];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.toObject =
    function (opt_includeInstance) {
      return proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        alternativesList: jspb.Message.toObjectList(
          msg.getAlternativesList(),
          proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.toObject,
          includeInstance
        ),
        isFinal: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        resultEndTime:
          (f = msg.getResultEndTime()) &&
          proto.com.cisco.wcc.ccai.v1.Duration.toObject(includeInstance, f),
        channelTag: jspb.Message.getFieldWithDefault(msg, 5, 0),
        languageCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
        hasAppliedRecordingOffsets: jspb.Message.getBooleanFieldWithDefault(
          msg,
          7,
          false
        ),
        speakerIdsList:
          (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
        lastPacketMetricsUnixTimestampMs: jspb.Message.getFieldWithDefault(
          msg,
          9,
          0
        ),
        messageType: jspb.Message.getFieldWithDefault(msg, 10, ""),
        responseEvent: jspb.Message.getFieldWithDefault(msg, 11, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult();
    return proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value =
            new proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative
              .deserializeBinaryFromReader
          );
          msg.addAlternatives(value);
          break;
        case 2:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setIsFinal(value);
          break;
        case 4:
          var value = new proto.com.cisco.wcc.ccai.v1.Duration();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.Duration.deserializeBinaryFromReader
          );
          msg.setResultEndTime(value);
          break;
        case 5:
          var value = /** @type {number} */ (reader.readInt32());
          msg.setChannelTag(value);
          break;
        case 6:
          var value = /** @type {string} */ (reader.readString());
          msg.setLanguageCode(value);
          break;
        case 7:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setHasAppliedRecordingOffsets(value);
          break;
        case 8:
          var values = /** @type {!Array<number>} */ (
            reader.isDelimited()
              ? reader.readPackedUint32()
              : [reader.readUint32()]
          );
          for (var i = 0; i < values.length; i++) {
            msg.addSpeakerIds(values[i]);
          }
          break;
        case 9:
          var value = /** @type {number} */ (reader.readInt64());
          msg.setLastPacketMetricsUnixTimestampMs(value);
          break;
        case 10:
          var value = /** @type {string} */ (reader.readString());
          msg.setMessageType(value);
          break;
        case 11:
          var value = /** @type {!proto.com.cisco.wcc.ccai.v1.OutputEvent} */ (
            reader.readEnum()
          );
          msg.setResponseEvent(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getAlternativesList();
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        1,
        f,
        proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative
          .serializeBinaryToWriter
      );
    }
    f = message.getIsFinal();
    if (f) {
      writer.writeBool(2, f);
    }
    f = message.getResultEndTime();
    if (f != null) {
      writer.writeMessage(
        4,
        f,
        proto.com.cisco.wcc.ccai.v1.Duration.serializeBinaryToWriter
      );
    }
    f = message.getChannelTag();
    if (f !== 0) {
      writer.writeInt32(5, f);
    }
    f = message.getLanguageCode();
    if (f.length > 0) {
      writer.writeString(6, f);
    }
    f = message.getHasAppliedRecordingOffsets();
    if (f) {
      writer.writeBool(7, f);
    }
    f = message.getSpeakerIdsList();
    if (f.length > 0) {
      writer.writePackedUint32(8, f);
    }
    f = message.getLastPacketMetricsUnixTimestampMs();
    if (f !== 0) {
      writer.writeInt64(9, f);
    }
    f = message.getMessageType();
    if (f.length > 0) {
      writer.writeString(10, f);
    }
    f = message.getResponseEvent();
    if (f !== 0.0) {
      writer.writeEnum(11, f);
    }
  };

/**
 * repeated SpeechRecognitionAlternative alternatives = 1;
 * @return {!Array<!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative>}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getAlternativesList =
  function () {
    return /** @type{!Array<!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative,
        1
      )
    );
  };

/**
 * @param {!Array<!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setAlternativesList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.addAlternatives =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      1,
      opt_value,
      proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative,
      opt_index
    );
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.clearAlternativesList =
  function () {
    return this.setAlternativesList([]);
  };

/**
 * optional bool is_final = 2;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getIsFinal =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 2, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setIsFinal =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
  };

/**
 * optional Duration result_end_time = 4;
 * @return {?proto.com.cisco.wcc.ccai.v1.Duration}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getResultEndTime =
  function () {
    return /** @type{?proto.com.cisco.wcc.ccai.v1.Duration} */ (
      jspb.Message.getWrapperField(
        this,
        proto.com.cisco.wcc.ccai.v1.Duration,
        4
      )
    );
  };

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.Duration|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setResultEndTime =
  function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.clearResultEndTime =
  function () {
    return this.setResultEndTime(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.hasResultEndTime =
  function () {
    return jspb.Message.getField(this, 4) != null;
  };

/**
 * optional int32 channel_tag = 5;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getChannelTag =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
  };

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setChannelTag =
  function (value) {
    return jspb.Message.setProto3IntField(this, 5, value);
  };

/**
 * optional string language_code = 6;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getLanguageCode =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 6, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setLanguageCode =
  function (value) {
    return jspb.Message.setProto3StringField(this, 6, value);
  };

/**
 * optional bool has_applied_recording_offsets = 7;
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getHasAppliedRecordingOffsets =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 7, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setHasAppliedRecordingOffsets =
  function (value) {
    return jspb.Message.setProto3BooleanField(this, 7, value);
  };

/**
 * repeated uint32 speaker_ids = 8;
 * @return {!Array<number>}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getSpeakerIdsList =
  function () {
    return /** @type {!Array<number>} */ (
      jspb.Message.getRepeatedField(this, 8)
    );
  };

/**
 * @param {!Array<number>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setSpeakerIdsList =
  function (value) {
    return jspb.Message.setField(this, 8, value || []);
  };

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.addSpeakerIds =
  function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.clearSpeakerIdsList =
  function () {
    return this.setSpeakerIdsList([]);
  };

/**
 * optional int64 last_packet_metrics_unix_timestamp_ms = 9;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getLastPacketMetricsUnixTimestampMs =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
  };

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setLastPacketMetricsUnixTimestampMs =
  function (value) {
    return jspb.Message.setProto3IntField(this, 9, value);
  };

/**
 * optional string message_type = 10;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getMessageType =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 10, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setMessageType =
  function (value) {
    return jspb.Message.setProto3StringField(this, 10, value);
  };

/**
 * optional OutputEvent response_event = 11;
 * @return {!proto.com.cisco.wcc.ccai.v1.OutputEvent}
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.getResponseEvent =
  function () {
    return /** @type {!proto.com.cisco.wcc.ccai.v1.OutputEvent} */ (
      jspb.Message.getFieldWithDefault(this, 11, 0)
    );
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.OutputEvent} value
 * @return {!proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult} returns this
 */
proto.com.cisco.wcc.ccai.v1.StreamingRecognitionResult.prototype.setResponseEvent =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 11, value);
  };

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.toObject =
    function (opt_includeInstance) {
      return proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        transcript: jspb.Message.getFieldWithDefault(msg, 1, ""),
        confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
        wordsList: jspb.Message.toObjectList(
          msg.getWordsList(),
          proto.com.cisco.wcc.ccai.v1.WordInfo.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative();
    return proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setTranscript(value);
          break;
        case 2:
          var value = /** @type {number} */ (reader.readFloat());
          msg.setConfidence(value);
          break;
        case 3:
          var value = new proto.com.cisco.wcc.ccai.v1.WordInfo();
          reader.readMessage(
            value,
            proto.com.cisco.wcc.ccai.v1.WordInfo.deserializeBinaryFromReader
          );
          msg.addWords(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getTranscript();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getConfidence();
    if (f !== 0.0) {
      writer.writeFloat(2, f);
    }
    f = message.getWordsList();
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        3,
        f,
        proto.com.cisco.wcc.ccai.v1.WordInfo.serializeBinaryToWriter
      );
    }
  };

/**
 * optional string transcript = 1;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.getTranscript =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} returns this
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.setTranscript =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional float confidence = 2;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.getConfidence =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} returns this
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.setConfidence =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value);
  };

/**
 * repeated WordInfo words = 3;
 * @return {!Array<!proto.com.cisco.wcc.ccai.v1.WordInfo>}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.getWordsList =
  function () {
    return /** @type{!Array<!proto.com.cisco.wcc.ccai.v1.WordInfo>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.com.cisco.wcc.ccai.v1.WordInfo,
        3
      )
    );
  };

/**
 * @param {!Array<!proto.com.cisco.wcc.ccai.v1.WordInfo>} value
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} returns this
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.setWordsList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
  };

/**
 * @param {!proto.com.cisco.wcc.ccai.v1.WordInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo}
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.addWords =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      3,
      opt_value,
      proto.com.cisco.wcc.ccai.v1.WordInfo,
      opt_index
    );
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative} returns this
 */
proto.com.cisco.wcc.ccai.v1.SpeechRecognitionAlternative.prototype.clearWordsList =
  function () {
    return this.setWordsList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.WordInfo.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.WordInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.WordInfo.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        startTime:
          (f = msg.getStartTime()) &&
          proto.com.cisco.wcc.ccai.v1.Duration.toObject(includeInstance, f),
        endTime:
          (f = msg.getEndTime()) &&
          proto.com.cisco.wcc.ccai.v1.Duration.toObject(includeInstance, f),
        word: jspb.Message.getFieldWithDefault(msg, 3, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.WordInfo();
  return proto.com.cisco.wcc.ccai.v1.WordInfo.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.WordInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.com.cisco.wcc.ccai.v1.Duration();
        reader.readMessage(
          value,
          proto.com.cisco.wcc.ccai.v1.Duration.deserializeBinaryFromReader
        );
        msg.setStartTime(value);
        break;
      case 2:
        var value = new proto.com.cisco.wcc.ccai.v1.Duration();
        reader.readMessage(
          value,
          proto.com.cisco.wcc.ccai.v1.Duration.deserializeBinaryFromReader
        );
        msg.setEndTime(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setWord(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.WordInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.WordInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.cisco.wcc.ccai.v1.Duration.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.cisco.wcc.ccai.v1.Duration.serializeBinaryToWriter
    );
  }
  f = message.getWord();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional Duration start_time = 1;
 * @return {?proto.com.cisco.wcc.ccai.v1.Duration}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.getStartTime = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.Duration} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.Duration, 1)
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.Duration|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo} returns this
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.setStartTime = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo} returns this
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.clearStartTime = function () {
  return this.setStartTime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.hasStartTime = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional Duration end_time = 2;
 * @return {?proto.com.cisco.wcc.ccai.v1.Duration}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.getEndTime = function () {
  return /** @type{?proto.com.cisco.wcc.ccai.v1.Duration} */ (
    jspb.Message.getWrapperField(this, proto.com.cisco.wcc.ccai.v1.Duration, 2)
  );
};

/**
 * @param {?proto.com.cisco.wcc.ccai.v1.Duration|undefined} value
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo} returns this
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.setEndTime = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo} returns this
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.clearEndTime = function () {
  return this.setEndTime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.hasEndTime = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string word = 3;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.getWord = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.WordInfo} returns this
 */
proto.com.cisco.wcc.ccai.v1.WordInfo.prototype.setWord = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.Duration.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.Duration.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.Duration} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.Duration.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
        nanos: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.Duration}
 */
proto.com.cisco.wcc.ccai.v1.Duration.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.Duration();
  return proto.com.cisco.wcc.ccai.v1.Duration.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.Duration}
 */
proto.com.cisco.wcc.ccai.v1.Duration.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setSeconds(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setNanos(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.Duration.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.Duration.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
};

/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.Duration.prototype.getSeconds = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Duration} returns this
 */
proto.com.cisco.wcc.ccai.v1.Duration.prototype.setSeconds = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.Duration.prototype.getNanos = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Duration} returns this
 */
proto.com.cisco.wcc.ccai.v1.Duration.prototype.setNanos = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.com.cisco.wcc.ccai.v1.Status.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.com.cisco.wcc.ccai.v1.Status.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.com.cisco.wcc.ccai.v1.Status} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.com.cisco.wcc.ccai.v1.Status.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        code: jspb.Message.getFieldWithDefault(msg, 1, 0),
        message: jspb.Message.getFieldWithDefault(msg, 2, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cisco.wcc.ccai.v1.Status}
 */
proto.com.cisco.wcc.ccai.v1.Status.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cisco.wcc.ccai.v1.Status();
  return proto.com.cisco.wcc.ccai.v1.Status.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cisco.wcc.ccai.v1.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cisco.wcc.ccai.v1.Status}
 */
proto.com.cisco.wcc.ccai.v1.Status.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cisco.wcc.ccai.v1.Status.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.com.cisco.wcc.ccai.v1.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cisco.wcc.ccai.v1.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cisco.wcc.ccai.v1.Status.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.com.cisco.wcc.ccai.v1.Status.prototype.getCode = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Status} returns this
 */
proto.com.cisco.wcc.ccai.v1.Status.prototype.setCode = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string message = 2;
 * @return {string}
 */
proto.com.cisco.wcc.ccai.v1.Status.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.com.cisco.wcc.ccai.v1.Status} returns this
 */
proto.com.cisco.wcc.ccai.v1.Status.prototype.setMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * @enum {number}
 */
proto.com.cisco.wcc.ccai.v1.OutputEvent = {
  EVENT_UNSPECIFIED: 0,
  EVENT_START_OF_INPUT: 1,
  EVENT_END_OF_INPUT: 2,
};

goog.object.extend(exports, proto.com.cisco.wcc.ccai.v1);
